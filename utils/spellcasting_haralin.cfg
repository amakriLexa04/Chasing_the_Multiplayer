#textdomain wesnoth-ctl

# put this here so it can be used by panacea (it's also used in some last breath events)
#define CONTINGENCY_GLOBAL_CONDITIONS
    {AND(
        {VARIABLE_CONDITIONAL skill_contingency equals yes}
        {HAVE_UNIT id,race=haralin,human} # haralin can't cast spells during polymorph, including contingency
    )}
#enddef

#######################################################################################################################################################
#----------------------------------------------------------------- "PRIVATE" MACROS -------------------------------------------------------------------
#######################################################################################################################################################
#                                                                   GROUP 0 SKILLS
#######################################################################################################################################################

#############################
# MAGIC BLAST
#############################
#define EVENT_MAGIC_BLAST
    [event]
        name=refresh_haralin_skills
        first_time_only=no
		{CHECK_EQUIPPED_SPELL id=haralin skill_magic_blast}
        [if] {VARIABLE_CONDITIONAL equipped_spell_found equals yes} {THEN(
		    [store_unit]
			    {FILTER id=haralin}
			    variable=haralin_blast_damage
			[/store_unit]
			
			[if]
			{VARIABLE_CONDITIONAL haralin_blast_damage.level equals 1}
			[then]
                [object]
                    id,take_only_once=skill_magic_blast,no {FILTER id=haralin}
                    {EFFECT new_attack (
                        name,description,icon=magic_blast,_"magic blast",attacks/mud-missile.png
                        range,type,damage,number=ranged,impact,9,2
                        [specials]
                            {WEAPON_SPECIAL_MAGICAL}
			    			[unstable]
                                name= _ "unstable"
                                description= _ "Each time this spell is used for both offense and defense, it drains {ON_DIFFICULTY 1 2 3} hp from its caster."
                            [/unstable]
                        [/specials] )}
                [/object]
			[/then]
			[else]
			    [object]
                    id,take_only_once=skill_magic_blast,no {FILTER id=haralin}
                    {EFFECT new_attack (
                        name,description,icon=magic_blast,_"magic blast",attacks/mud-missile.png
                        range,type,damage,number=ranged,impact,9,2
                        [specials]
                            {WEAPON_SPECIAL_MAGICAL}
                        [/specials] )}
                [/object]
			[/else][/if]
			    
			{CLEAR_VARIABLE haralin_blast_damage}
		)} [/if]
        [/event]
#enddef
#define ANIMATIONS_MAGIC_BLAST PATH

    [attack_anim]
        [filter_attack]
            name=magic_blast
        [/filter_attack]

        start_time=-350
        missile_start_time=-100
        halo_start_time=-250

        [missile_frame]
            duration=200
            image="projectiles/darkmissile-n.png"
            image_diagonal="projectiles/darkmissile-ne.png"
        [/missile_frame]

        {FRAME image={PATH}/haralin.png:[100,700,200]}

        [halo_frame]
            halo="halo/undead/dark-magic-[1~6].png~O(35%):50"
            halo_y=10
            halo_x=5
            auto_vflip=no
        [/halo_frame]

        {SOUND:HIT_AND_MISS magic-dark.ogg magic-dark-miss.ogg -100}
    [/attack_anim]
#enddef

#############################
# SUMMON
#############################

#define EVENT_SUMMON_CAST CASTER_ID TYPE
    [animate_unit]
        flag=leading
        [filter]
            id={CASTER_ID}
        [/filter]
        [facing]
            x,y=$unit_to_cast_on_x, $unit_to_cast_on_y
        [/facing]
    [/animate_unit]

    [unit]
        side=$side_number
        type={TYPE}
        attacks_left=0
        moves=0
        x,y= $unit_to_cast_on_x, $unit_to_cast_on_y
        animate=yes
    [/unit]

#enddef

#define EVENT_SUMMON_MUD

    [event]
        name=skill_summon_mud_cast
        first_time_only=no
        {EVENT_SUMMON_CAST "$current_caster" Mudcrawler}
    [/event]

    [event]
        name=skill_summon_mud
        first_time_only=no

		{CTL_ADJACENT_SPELL "$current_caster" 1 "misc/summon.png" true "skill_summon_mud_cast" 8 6}

    [/event]
#enddef

#define EVENT_SUMMON_ROCK
    [event]
        name=skill_summon_rock_cast
        first_time_only=no
        {EVENT_SUMMON_CAST "$current_caster" (Elemental Rock)}
    [/event]

    [event]
        name=skill_summon_rock
        first_time_only=no

		{CTL_ADJACENT_SPELL "$current_caster" 1 "misc/summon.png" true "skill_summon_rock_cast" 14 8}
    [/event]

#enddef

#define EVENT_SUMMON_WATER

    [event]
        name=skill_summon_water_cast
        first_time_only=no
        {EVENT_SUMMON_CAST "$current_caster" (Elemental Water)}
    [/event]

    [event]
        name=skill_summon_water
        first_time_only=no

        {CTL_ADJACENT_SPELL "$current_caster" 1 "misc/summon.png" true "skill_summon_water_cast" 10 8}
    [/event]
#enddef

#define EVENT_SUMMON_AIR

    [event]
        name=skill_summon_air_cast
        first_time_only=no
        {EVENT_SUMMON_CAST "$current_caster" (Elemental Air)}
    [/event]

    [event]
        name=skill_summon_air
        first_time_only=no

        {CTL_ADJACENT_SPELL "$current_caster" 1 "misc/summon.png" true "skill_summon_air_cast" 10 8}
    [/event]
#enddef

#define EVENT_SUMMON_FIRE

    [event]
        name=skill_summon_fire_cast
        first_time_only=no
        {EVENT_SUMMON_CAST "$current_caster" (Elemental Fire)}
    [/event]

    [event]
        name=skill_summon_fire
        first_time_only=no

        {CTL_ADJACENT_SPELL "$current_caster" 1 "misc/summon.png" true "skill_summon_fire_cast" 12 8}
    [/event]
#enddef


#############################
# BEND NATURE
#############################
#define EVENT_BEND_NATURE_REVERT_PRE TYPE DURATION
    {VARIABLE revert_bend_type {TYPE}}
	{VARIABLE revert_bend_duration {DURATION}}
    [lua]
        code= <<
            local revert_bend_turn_detected
            if wml.variables["revert_bend_turn"] then
            for revert_bend_turn_single in wml.variables["revert_bend_turn"]:gmatch("[^,]+") do
                if revert_bend_turn_single == "turn " .. (wml.variables["turn_number"] + wml.variables["revert_bend_duration"]) then
                    revert_bend_turn_detected = true
                end
            end
            end
            
            if not revert_bend_turn_detected then
                wml.variables["revert_bend_turn"] = (wml.variables["revert_bend_turn"] or "") .. ",turn " .. (wml.variables["turn_number"] + wml.variables["revert_bend_duration"])   
            end
            
            local bend_revert_name = "bend_revert_" .. (wml.variables["turn_number"] + wml.variables["revert_bend_duration"])
            
            wml.fire("set_variables", {
                name = bend_revert_name,
                mode = "append",
                wml.tag.value {
                    x = wml.variables["unit_to_cast_on_x"],
                    y = wml.variables["unit_to_cast_on_y"],
                    terrain = wesnoth.get_terrain(wml.variables["unit_to_cast_on_x"], wml.variables["unit_to_cast_on_y"]),
					type = wml.variables["revert_bend_type"]
                }
            })
        >>
    [/lua]
#enddef

#define EVENT_BEND_NATURE_REPLACE OLD_TERRAIN NEW_TERRAIN
    #[lua]
    #    code= <<
    #        for revert_bend_terrain_single in wml.variables["revert_bend_temp[" .. wml.variables["i"] .. "].terrain"]:gmatch("[^^]+") do
	#		    wml.variables["revert_bend_terrain_code"] = revert_bend_terrain_single
	#			break
    #        end
    #    >>
    #[/lua]

    [if]
	{VARIABLE_CONDITIONAL revert_bend_temp[$i].terrain equals {OLD_TERRAIN}}
	[then]
	{MODIFY_TERRAIN {NEW_TERRAIN} $revert_bend_temp[$i].x $revert_bend_temp[$i].y}
	{VARIABLE revert_bend_replace _"true"}
	[/then][/if]
#enddef

#define EVENT_BEND_NATURE_REVERT_POST
    [event]
        name=turn $revert_bend_turn, revert_bend_now_event ##, victory
        first_time_only=no
    	
    	{QUAKE (rumble.ogg)}
		
        [lua]
        code= <<
            local i = 0
            while wml.variables["bend_revert_" .. wml.variables["turn_number"] .. "[" .. i .. "]"] do
                wml.variables["revert_bend_temp" ..  "[" .. i .. "]"] = wml.variables["bend_revert_" .. wml.variables["turn_number"] .. "[" .. i .. "]"]
            	i = i + 1
            end
        >>
        [/lua]
		
        {FOREACH revert_bend_temp i}  
            {DELAY 50}
			
			##відокремити як випадок для стіни(побудова землі)
			
			[if]
			{VARIABLE_CONDITIONAL revert_bend_temp[$i].type equals "EARTH"}
			[then]
			##глибока вода до води
			{EVENT_BEND_NATURE_REPLACE Wog Wwg}
			{EVENT_BEND_NATURE_REPLACE Wo   Ww}
			{EVENT_BEND_NATURE_REPLACE Wot Wwt}	
			##болото до брудного болота
			{EVENT_BEND_NATURE_REPLACE Ss   Sm}
			##брудне болото до землі
			{EVENT_BEND_NATURE_REPLACE Sm   Rb}
			##вода до брода
			{EVENT_BEND_NATURE_REPLACE Wwg Wwf}
			{EVENT_BEND_NATURE_REPLACE Ww  Wwf}
			{EVENT_BEND_NATURE_REPLACE Wwt Wwf}
			##брод до землі
			{EVENT_BEND_NATURE_REPLACE Wwf Rb}
			{EVENT_BEND_NATURE_REPLACE Wwrg Rb}
			{EVENT_BEND_NATURE_REPLACE Wwr Rb}
			{EVENT_BEND_NATURE_REPLACE Wwrt Rb}
			##трава до землі
			{EVENT_BEND_NATURE_REPLACE Gg Rb}
			{EVENT_BEND_NATURE_REPLACE Gs Rb}
			{EVENT_BEND_NATURE_REPLACE Gd Rb}
			{EVENT_BEND_NATURE_REPLACE Gll Rb}
			{EVENT_BEND_NATURE_REPLACE Aa Rb}
		    [/then]
			[elseif]
			{VARIABLE_CONDITIONAL revert_bend_temp[$i].type equals "WATER"}
			[then]
			##відокремити як випадок для води(знищення стін)
			{EVENT_BEND_NATURE_REPLACE Xor Xur}
			{EVENT_BEND_NATURE_REPLACE Xof Xur}
			{EVENT_BEND_NATURE_REPLACE Xot Xur}
			{EVENT_BEND_NATURE_REPLACE Xoa Xur}
			{EVENT_BEND_NATURE_REPLACE Xoc Xur}
			{EVENT_BEND_NATURE_REPLACE Xoi Xur}
			{EVENT_BEND_NATURE_REPLACE Xom Xur}
			{EVENT_BEND_NATURE_REPLACE Xos Xur}
			##печери до непрохідних гір
			{EVENT_BEND_NATURE_REPLACE Xur Md^Xm}
			{EVENT_BEND_NATURE_REPLACE Xue Md^Xm}
			{EVENT_BEND_NATURE_REPLACE Xuc Md^Xm}
			{EVENT_BEND_NATURE_REPLACE Xu  Md^Xm}
			#непрохідні гори до гір
			{EVENT_BEND_NATURE_REPLACE Mdd^Xm Mdd}
			{EVENT_BEND_NATURE_REPLACE Ms^Xm Ms}
			{EVENT_BEND_NATURE_REPLACE Md^Xm Md}
			{EVENT_BEND_NATURE_REPLACE Mm^Xm Mm}
			
			#гори до холмів
			{EVENT_BEND_NATURE_REPLACE Mdd Hd}
			{EVENT_BEND_NATURE_REPLACE Ms Ha}
			{EVENT_BEND_NATURE_REPLACE Md Hhd}
			{EVENT_BEND_NATURE_REPLACE Mm Hh}
			
			##холми до трави
			{EVENT_BEND_NATURE_REPLACE Hd Dd}
			{EVENT_BEND_NATURE_REPLACE Ha Aa}
			{EVENT_BEND_NATURE_REPLACE Hhd Gd}
			{EVENT_BEND_NATURE_REPLACE Hh Gg}
			[/then][/elseif]
			
			[elseif]
			{VARIABLE_CONDITIONAL revert_bend_temp[$i].type equals "AIR"}
			[then]
			
			[/then][/elseif]
			
			[elseif]
			{VARIABLE_CONDITIONAL revert_bend_temp[$i].type equals "LAVA"}
			[then]
			
			[/then][/elseif]
			[/if]
			
			##додати затоплення/знищення замку

			[if]
			{VARIABLE_CONDITIONAL revert_bend_replace not_equals true}
			[then]
                {MODIFY_TERRAIN $revert_bend_temp[$i].terrain $revert_bend_temp[$i].x $revert_bend_temp[$i].y}
			[/then][/if]
			{CLEAR_VARIABLE revert_bend_replace}
			
            [unpetrify]
               x,y=$revert_bend_temp[$i].x,$revert_bend_temp[$i].y
            [/unpetrify]
            [redraw][/redraw]
        {NEXT i}
		
        [lua]
        code= <<
            wml.variables["revert_bend_temp"] = nil
            wml.variables["bend_revert_" .. wml.variables["turn_number"]] = nil
        >>
        [/lua]
    [/event]
	
	[event]
        name=prestart,victory
        first_time_only=no
		
        [lua]
        code= <<
		    wml.variables["revert_bend_turn"] = nil
            wml.variables["revert_bend_temp"] = nil
			
            --local i,j = 0
		    --while j < 500 do
            --    while wml.variables["bend_revert_" .. j .. "[" .. i .. "]"] do
            --        wml.variables["bend_revert_" .. j .. "[" .. i .. "]"] = nil
            --    	i = i + 1
            --    end
			--	j = j + 1
			--end
        >>
        [/lua]
    [/event]
#enddef


#define EVENT_BEND_NATURE_EARTH
    [event]
        name=skill_bend_earth_cast
        first_time_only=no
		
		[if]
		[variable]
		name=caster_bend_animation
		equals=false
		[/variable]
		[then]
		{ANIMATE_UNIT id=$current_caster skill_bend_cast}
		{VARIABLE caster_bend_animation _"true"}
		[/then][/if]
        
		{EVENT_BEND_NATURE_REVERT_PRE "EARTH" 1}
		
		{QUAKE (rumble.ogg)}
		{DELAY 50}
		{MODIFY_TERRAIN Xue $unit_to_cast_on_x $unit_to_cast_on_y}
		[petrify]
		   x,y=$unit_to_cast_on_x,$unit_to_cast_on_y
	    [/petrify]
		[redraw][/redraw]

    [/event]

    [event]
        name=skill_bend_earth
        first_time_only=no
		
		{VARIABLE caster_bend_animation _"false"}

        {CTL_ROSE_SPELL "$current_caster" 4 "misc/avatar.png" false "skill_bend_earth_cast" 0 0}
    [/event]
#enddef

#define EVENT_BEND_NATURE_AIR

    [event]
        name=skill_bend_air_cast
        first_time_only=no
		
		[if]
		[variable]
		name=caster_bend_animation
		equals=false
		[/variable]
		[then]
		{ANIMATE_UNIT id=$current_caster skill_bend_cast}
		{VARIABLE caster_bend_animation _"true"}
		[/then][/if]
		
		{EVENT_BEND_NATURE_REVERT_PRE "AIR" 1}
		
		{QUAKE (wind.ogg)}
		{DELAY 50}
		[redraw][/redraw]
        ##сам код закляття в true_ranged_spells.cfg
    [/event]
	
	[event]
	    name=skill_bend_air_cast_post
		first_time_only=no
		
		{FIRE_EVENT revert_bend_now_event}
	[/event]

    [event]
        name=skill_bend_air
        first_time_only=no
		
		{VARIABLE caster_bend_animation _"false"}

        {CTL_ROSE_SPELL "$current_caster" 4 "misc/avatar.png" false "skill_bend_air_cast" 0 0}
    [/event]
#enddef

#define EVENT_BEND_NATURE_WATER

    [event]
        name=skill_bend_water_cast
        first_time_only=no
		
		[if]
		[variable]
		name=caster_bend_animation
		equals=false
		[/variable]
		[then]
		{ANIMATE_UNIT id=$current_caster skill_bend_cast}
		{VARIABLE caster_bend_animation _"true"}
		[/then][/if]
		
		{EVENT_BEND_NATURE_REVERT_PRE "WATER" 0}
		
		{QUAKE (rumble.ogg)}
		{DELAY 50}
		{MODIFY_TERRAIN Wot $unit_to_cast_on_x $unit_to_cast_on_y}
		{MODIFY_UNIT (x,y=$unit_to_cast_on_x,$unit_to_cast_on_y) status.slowed yes}
		[redraw][/redraw]
    [/event]
	
	[event]
	    name=skill_bend_water_cast_post
		first_time_only=no
		
		{FIRE_EVENT revert_bend_now_event}
	[/event]

    [event]
        name=skill_bend_water
        first_time_only=no
		
		{VARIABLE caster_bend_animation _"false"}

        {CTL_ROSE_SPELL "$current_caster" 4 "misc/avatar.png" false "skill_bend_water_cast" 0 0}
    [/event]
#enddef

#define EVENT_BEND_NATURE_LAVA

    [event]
        name=skill_bend_lava_cast
        first_time_only=no
		
		[if]
		[variable]
		name=caster_bend_animation
		equals=false
		[/variable]
		[then]
		
		{ANIMATE_UNIT id=$current_caster skill_bend_cast}
		{VARIABLE caster_bend_animation _"true"}
		[/then][/if]
		
		{EVENT_BEND_NATURE_REVERT_PRE "LAVA" 2}
		
		{QUAKE (rumble.ogg)}
		{DELAY 50}
		{MODIFY_TERRAIN Qlf $unit_to_cast_on_x $unit_to_cast_on_y}
		##сам код закляття в true_ranged_spells.cfg
		[redraw][/redraw]

    [/event]

    [event]
        name=skill_bend_lava
        first_time_only=no
		
		{VARIABLE caster_bend_animation _"false"}

        {CTL_ROSE_SPELL "$current_caster" 4 "misc/avatar.png" false "skill_bend_lava_cast" 0 0}
    [/event]
#enddef
#define ANIMATIONS_BEND_LAVA PATH
    [animation]
        apply_to=skill_bend_cast
        {SOUND_FRAME sound=rumble.ogg}
        {FRAME image={PATH}/haralin.png:[50,300,50]}
		{MISSILE_FRAME_ICE}
        {OVERLAY_FRAME halo=halo/saurian-magic-halo-[1~7].png:75}
    [/animation]
#enddef


#############################
# SHIELD
#############################
#define EVENT_SHIELD
    [event]
        name=skill_shield
        first_time_only=no
        {ANIMATE_UNIT id=haralin skill_shield}
        [modify_unit]
            {FILTER id=haralin}
            [object]
                duration,id=turn,skill_shield
                {EFFECT defense ([defense]
                {FLY_DEFENSE -20} # reduce hit-chance by 20% on all terrain
            [/defense])}
        [/object]
    [/modify_unit]
    [event]
        name=skill_shield_cancel
        {REMOVE_OBJECT skill_shield id=haralin}
    [/event]
[/event]
[event]
    name=refresh_haralin_skills
    first_time_only=no
	{CHECK_EQUIPPED_SPELL id=haralin skill_shield}
    [if] {VARIABLE_CONDITIONAL equipped_spell_found not_equals yes} {THEN(
        {FIRE_EVENT skill_shield_cancel}
	)} [/if]
[/event]
#enddef
#define ANIMATIONS_SHIELD PATH
    [animation]
        apply_to=skill_shield
        {SOUND_FRAME sound=skill-shield.wav}
        {FRAME image={PATH}/haralin.png:[50,300,50]}
        {OVERLAY_FRAME halo="halo/merfolk/water-halo-[7~1].png~CS(255,255,255)~O(0.8):75"}
        {OVERLAY_FRAME (y,image=-2,halo/shield.png:300
        alpha=0.6~1.0, 1.0, 1.0~0.6)}
    [/animation]
    [standing_anim]
        {FILTER_OBJECT_ID skill_shield}
        {OVERLAY_FRAME (y,image=-2,halo/shield.png:3500
        alpha=0.5:250, 0.5~0.3:1500, 0.3:250, 0.3~0.5:1500)}
    [/standing_anim]
    [movement_anim]
        {FILTER_OBJECT_ID skill_shield}
        {OVERLAY_FRAME (y,image=-2,halo/shield.png:200
        alpha=0.4
        offset="0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200")}
    [/movement_anim]
    [defend]
        {FILTER_OBJECT_ID skill_shield}
        start_time=-175
        {FRAME( image={PATH}/haralin.png:50,{PATH}/haralin.png:250,{PATH}/haralin.png:50
        halo_y,halo=-2,"halo/shield.png~O(0.4,0.8,1.0,0.9,0.8,0.6,0.4]):50")}
        [if]
            hits=hit
            overlay_start_time=-25 {OVERLAY_FRAME sound={SOUND_LIST:HUMAN_HIT}}
        [/if]
    [/defend]
#enddef

#############################
# STASIS
#############################
#define EVENT_STASIS
    [event]
        name=skill_stasis
        first_time_only=no
        {ANIMATE_UNIT id=haralin skill_stasis}
        {MODIFY_UNIT ({FILTER_ADJACENT id=haralin} {OR id=haralin}) status.petrified yes}
        {MODIFY_UNIT ({FILTER_ADJACENT id=haralin} {OR id=haralin}) status.uncovered yes} # otherwise woses go invisible once haralin is petrified
        {FIRE_EVENT skill_stasis_end} # used in S13
        [event]
            name=side 1 turn refresh
            {MODIFY_UNIT status=petrified status.petrified no} # undo petrify after 1 turn
        [/event]
    [/event]
#enddef
#define ANIMATIONS_STASIS PATH
    [animation]
        apply_to=skill_stasis
        {SOUND_FRAME sound=skill-stasis.wav}
        {FRAME image={PATH}/haralin.png:[100,350,100]}
        {FRAME image={PATH}/haralin.png:[150]}
        {OVERLAY_FRAME  halo="halo/stasis/mystic-magic[1~6,4].png~CS(-255,-255,-255)~O(0.2)~SCALE(60,60):[100*7]"}
        {OVERLAY2_FRAME halo="halo/stasis/mysticaltoad-magic[1~6,4].png~CS(-255,-255,-255)~O(0.15)~SCALE(180,180):[100*7]"}
    [/animation]
#enddef

#############################
# PANACEA
#############################
#define FIND_DESTINATION_HEX ENEMY_COUNT
    [if] {VARIABLE_CONDITIONAL destination_hexes.length equals 0} {THEN(
        [store_reachable_locations]
            {FILTER id=$panacea_id}
            {FILTER_LOCATION(
                {NOT( {FILTER()} )} # don't move to a hex that's already occupied
                {FILTER_ADJACENT_LOCATION(
                    count={ENEMY_COUNT}
                    {FILTER( side=3,4,5,6,7,8,9,10,11,12,13 )}
                )}
            )}
            range=movement
            moves=current
            variable=destination_hexes
        [/store_reachable_locations]
    )} [/if]
#enddef
#define EVENT_PANACEA
    [event]
        name=skill_panacea
        first_time_only=no

        # find panacea target
        [store_unit]
            {FILTER( {IS_ALLY} {FILTER_ADJACENT id=haralin} )}
            variable=panacea_possible_targets
        [/store_unit]
        {VARIABLE panacea_id none}
        {VARIABLE panacea_hitpoints 999}
        [foreach]
            array=panacea_possible_targets
            [do]
                [if] {VARIABLE_CONDITIONAL this_item.hitpoints less_than_equal_to $panacea_hitpoints} {THEN(
                    {VARIABLE panacea_id           $this_item.id}
                    {VARIABLE panacea_hitpoints    $this_item.hitpoints}
                    {VARIABLE panacea_attacks_left $this_item.attacks_left} # I tried to do this nicely with $this_item and [store_unit], but had trouble comparing variables.
                    {VARIABLE panacea_level        $this_item.level}
                )}
				[/if]
            [/do]
        [/foreach]
        {CLEAR_VARIABLE panacea_possible_targets,panacea_hitpoints}

        # cancel spell if no target
        [if] {VARIABLE_CONDITIONAL panacea_id equals none} {THEN(
            [floating_text]
                {FILTER id=haralin}
                text=_"<span color='#ff0000' size='x-small'>No Target</span>"
            [/floating_text]
            {CLEAR_VARIABLE spellcasted_this_turn_haralin}
            [modify_unit]
                {FILTER id=haralin}
                experience="$( $this_unit.experience + 8 )" # XP is also used in spellcasting.lua
            [/modify_unit]
            [return]
            [/return]
        )}
		[/if]

        #------------------------
        # CAST SPELL
        #------------------------
        # this is the sound of drinking a potion - doesn't make sense for mudcrawlers or fire guardians. (but the spell still works; it's magic)
        [if] {HAVE_UNIT( id=$panacea_id {NOT trait=elemental} )} {THEN({SOUND skill-panacea.wav})}
		[/if]
        {MODIFY_UNIT id=$panacea_id status.poisoned yes}
        {DELAY 200}
        {MODIFY_UNIT id=$panacea_id status.poisoned no}
        {DELAY 200}
        {MODIFY_UNIT id=$panacea_id status.poisoned yes}
        {DELAY 200}
        {MODIFY_UNIT id=$panacea_id status.poisoned no}
        {DELAY 200}
        {MODIFY_UNIT id=$panacea_id status.poisoned yes}
        {DELAY 200}
        [heal_unit]
            {FILTER id=$panacea_id}
            animate=yes
        [/heal_unit]
        {MODIFY_UNIT id=$panacea_id status.poisoned yes}
        {VARIABLE atks $panacea_attacks_left}
        {VARIABLE_OP atks add $panacea_level}
        {MODIFY_UNIT id=$panacea_id attacks_left $atks}
        {CLEAR_VARIABLE atks}
        [object]
            {FILTER id=$panacea_id}
            id,take_only_once=skill_panacea_buff,no
            {EFFECT max_attacks increase=$panacea_level}
            {EFFECT attack increase_attacks=$panacea_level}
            {EFFECT attack increase_damage=$panacea_level}
            {EFFECT halo halo="halo/panacea.png~O([0.7,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.0,0.0,0.0,0.0,0.1,0.2,0.3,0.4,0.5,0.6])"}
            {EFFECT new_ability ([abilities]
            [dummy]
                id,name,description=panacea, _"panacea", _"Next turn, this unit dies."
            [/dummy]
            [regenerate]
                # prevent the panacea "poison" from dealing damage (only relevant if you panacea another side's unit
                affect_self,value,poison=yes,0,slowed
            [/regenerate]
        [/abilities])}
    [/object]

    #------------------------
    # AI OVERRIDE
    #------------------------
    # if we panacea an ally, override their default ai and make them super aggro
    # this is only possible in S06 and S10, where you can panacea Garard's forces (side 2)
    # and only actually useful in S06
    [if] {HAVE_UNIT id,side=$panacea_id,2} {THEN(
        # manually move adjacent to an enemy, preferring higher enemy counts
        [event]
            name=side 2 turn
            {FIND_DESTINATION_HEX 3-99}
            {FIND_DESTINATION_HEX 2}
            {FIND_DESTINATION_HEX 1}
            [if] {VARIABLE_CONDITIONAL destination_hexes.length not_equals 0} {THEN(
                {MOVE_UNIT id=$panacea_id $destination_hexes[0].x $destination_hexes[0].y}
                {MODIFY_UNIT id=$panacea_id moves 0}
            )}
			[/if]
            {CLEAR_VARIABLE destination_hexes}
        [/event]

        # execute the actual attacks via a MAI
        [micro_ai]
            side,action,ai_type=2,add,simple_attack
            ca_score=9999999
            {FILTER id=$panacea_id}
        [/micro_ai]
    )}
	[/if]

    #------------------------
    # KILL THE RECIPIENT
    #------------------------
    [event]
        name=side 1 turn,victory

        [if] {CONTINGENCY_GLOBAL_CONDITIONS} {THEN(
            [harm_unit] # use [harm_unit] instead of {KILL} so that we can combo with skill_contingency
                {FILTER id=$panacea_id}
                amount,animate,kill=999,yes,no
            [/harm_unit]
            [fire_event]
                name=trigger_contingency
                [primary_unit]
                    id=$panacea_id
                [/primary_unit]
            [/fire_event]
        )}
        {ELSE(
            {KILL id=$panacea_id ANIMATE=yes FIRE_EVENT=yes}
        )}
		[/if]

        {REMOVE_OBJECT skill_panacea_buff ()}
        {CLEAR_VARIABLE panacea_id,panacea_attacks_left,panacea_level}
    [/event]
[/event]
#enddef
#define ANIMATIONS_PANACEA PATH
#enddef


#######################################################################################################################################################
#                                                                   GROUP 1 SKILLS
#######################################################################################################################################################
#############################
# CHILL TOUCH
#############################
#define EVENT_CHILL_TOUCH
    [event]
        name=refresh_haralin_skills
        first_time_only=no
		{CHECK_EQUIPPED_SPELL id=haralin skill_chill_touch}
        [if] {VARIABLE_CONDITIONAL equipped_spell_found equals yes} {THEN(
            [object]
                id,take_only_once=skill_chill_touch,no {FILTER id=haralin}
                {EFFECT new_attack (
                    name,description,icon="chill touch",_"chill touch",icons/chill-touch.png
                    range,type,damage,number=melee,cold,6,3
                    [specials]
                        {WEAPON_SPECIAL_SLOW}
                    [/specials]  )}
                [/object]
		)} [/if]
        [/event]
#enddef
#define ANIMATIONS_CHILL_TOUCH PATH
    [attack_anim]
        {FILTER_ATTACK (name=chill touch)}
        start_time=-250
        {FRAME image={PATH}/haralin.png:50}
        {FRAME image={PATH}/haralin.png:[100,200]}
        {SOUND:HIT_AND_MISS staff.ogg staff-miss.ogg -125}
        {FRAME image={PATH}/haralin.png:50}
        {FRAME image={PATH}/haralin.png:50}
        overlay_start_time=-250
        {OVERLAY_FRAME halo="halo/elven/nature-halo[1~8].png~CS(-10,-10,20)~O(0.3):[60*8]"}
    [/attack_anim]
#enddef

#############################
# LEVITATE
#############################
#define EVENT_LEVITATE
    [event]
        name=skill_levitate
        first_time_only=no
        {ANIMATE_UNIT id=haralin skill_levitate}
        [modify_unit]
            {FILTER id=haralin}
            [object]
                duration,id=turn,skill_levitate
                {EFFECT new_ability ([abilities]
                [skirmisher]
                    id,affect_self=skirmisher,yes
                [/skirmisher]
            [/abilities])}
            {EFFECT defense (replace=yes
            [defense]
                {FLY_DEFENSE -50} # 50% hit-chance on all terrain
				cave=-50
            [/defense])}
            {EFFECT movement_costs (replace=yes
            [movement_costs]
                {FLY_MOVE} # fast movement on most terrains
				cave=1
            [/movement_costs])}
        [/object]
    [/modify_unit]

    # kill haralin if he was levitating over unwalkable terrain, and is now unable to move
    [event]
        name=side 1 turn refresh,skill_levitate_cancel
        {REMOVE_OBJECT skill_levitate id=haralin}
        [if] {HAVE_UNIT (id,defense=haralin,100)} {THEN(
            [message]
                speaker=haralin
                message=_"My levitate spell has ended over impassable terrain! I‘m falling to my death!"
            [/message]
            {KILL id=haralin ANIMATE=yes}
            [endlevel]
                result=defeat
            [/endlevel]
        )}
		[/if]
    [/event]
[/event]
[event]
    name=refresh_haralin_skills
    first_time_only=no
	{CHECK_EQUIPPED_SPELL id=haralin skill_levitate}
    [if] {VARIABLE_CONDITIONAL equipped_spell_found not_equals yes} {THEN(
        {FIRE_EVENT skill_levitate_cancel}
	)} [/if]
[/event]
#enddef
#define ANIMATIONS_LEVITATE PATH
    [animation]
        apply_to=skill_levitate
        {SOUND_FRAME sound=skill-levitate.wav}
        {FRAME image={PATH}/haralin.png:[50,300,50]}
        {FRAME submerge,image=0.01,"{PATH}/haralin-shadow.png~BLIT({PATH}/haralin-noshadow.png~RC(magenta>red),0,-[1,2,3,4]):[100,150,200,250]"}
        {OVERLAY_FRAME halo=halo/saurian-magic-halo-[1~7].png:75}
    [/animation]
    [standing_anim]
        {FILTER_OBJECT_ID skill_levitate}
        {FRAME submerge,image=0.01,"{PATH}/haralin-shadow.png~BLIT({PATH}/haralin-noshadow.png~RC(magenta>red),0,-[4~1,2~8,8~5,5,5~8,8~5]):350"}
    [/standing_anim]
    [movement_anim]
        {FILTER_OBJECT_ID skill_levitate}
        {FRAME submerge,image=0.01,"{PATH}/haralin-shadow.png~BLIT({PATH}/haralin-noshadow.png~RC(magenta>red),0,-4):200"}
    [/movement_anim]
#enddef

#############################
# FIND FAMILIAR
#############################
#define EVENT_FIND_FAMILIAR
    [event]
        name=refresh_haralin_skills
        first_time_only=no
		{CHECK_EQUIPPED_SPELL id=haralin skill_find_familiar}
        [if] {VARIABLE_CONDITIONAL equipped_spell_found not_equals yes} {THEN(
		    [if]
			{HAVE_UNIT id,search_recall_list=familiar,yes} {THEN(
                [store_unit]
                    {FILTER id=familiar}
                    variable,kill=stored_familiar,yes
                [/store_unit]	
			)} [/if]
        )} [/if]
    [/event]
    [event]
        name=refresh_haralin_skills
        first_time_only=no
		
        # if we did select find familiar, ensure we have one
		{CHECK_EQUIPPED_SPELL id=haralin skill_find_familiar}
        [if] {VARIABLE_CONDITIONAL equipped_spell_found equals yes}
            {NOT({HAVE_UNIT id,search_recall_list=familiar,yes})}
            {THEN(
                {STORE_UNIT_VAR id=haralin x delfX} {STORE_UNIT_VAR id=haralin y delfY}
                [if] {VARIABLE_CONDITIONAL stored_familiar.length greater_than 0} {THEN(
                    {VARIABLE stored_familiar.hitpoints $stored_familiar.max_hitpoints}
                    {VARIABLE stored_familiar.moves     $stored_familiar.max_moves    }
                    {VARIABLE stored_familiar.attacks_left 1}
                    [unstore_unit]
                        variable=stored_familiar
                        x,y,find_vacant=$delfX,$delfY,yes
                        animate=yes
                    [/unstore_unit]
                    {CLEAR_VARIABLE stored_familiar}
                )} {ELSE(
                    {NAMED_NOTRAIT_UNIT 1 Raven $delfX $delfY familiar _"Familiar"}
                    {ADD_MODIFICATION( {TRAIT_LOYAL} {TRAIT_STRONG} )}
                    {GIVE_OBJECT_TO id=familiar (
                        {EFFECT alignment set=lawful}
                        {EFFECT movement ({FILTER level=0} set=6)} # nerf speed. Find Familiar is already a very strong skill
                        {EFFECT movement ({FILTER level=1} set=6)}
                        {EFFECT movement ({FILTER level=2} set=6)}
                    )}
                )}
				[/if]
                {CLEAR_VARIABLE delfX,delfY}
            )}
			[/if]

            # if we didn't select find familiar, remove any existing familiar
            # if we did select find familiar, ensure we have one
			[if] {VARIABLE_CONDITIONAL equipped_spell_found not_equals yes}
                {HAVE_UNIT id,search_recall_list=familiar,yes}
                {THEN(
                    [store_unit] # only do this if the familiar actually exists, otherwise we overwrite the variable
                        {FILTER id=familiar}
                        variable,kill=stored_familiar,yes
                    [/store_unit]
                )}
				[/if]
            [/event]
            [event]
                name=victory,turn 1 # store at the end of every scenario (and at the start, in case [store_units] messes with things)
                first_time_only=no  # remember that skill reselection happens in a separate mousemove event, which means it'll be after turn 1 even if this all happens at the beginning of the scenario
                {FILTER_CONDITION({HAVE_UNIT id,search_recall_list=familiar,yes})}
                [store_unit] # only do this if the familiar actually exists, otherwise we overwrite the variable
                    {FILTER id=familiar}
                    variable,kill=stored_familiar,yes
                [/store_unit]
            [/event]
#enddef

#############################
# MNEMONIC
#############################
#define EVENT_MNEMONIC
    [event]
        name=refresh_haralin_skills
        first_time_only=no
		{CHECK_EQUIPPED_SPELL id=haralin skill_mnemonic}
        [if] {VARIABLE_CONDITIONAL equipped_spell_found equals yes} {THEN(
        [object]
            id,take_only_once=skill_mnemonic,no {FILTER id=haralin}
            {EFFECT new_ability ([abilities]
                [dummy]
                    id,name,description=mnemonic, _"mnemonic", _"Whenever an adjacent ally gains xp, you gain the same amount of xp."
                [/dummy]
            [/abilities])}
        [/object]
	    )} [/if]
[/event]
[event]
    name=attack end
    first_time_only=no
    {FILTER(        {IS_ALLY} {FILTER_ADJACENT id,ability=haralin,mnemonic} )}

    {VARIABLE xp_gain $unit.level}
    [modify_unit]
        {FILTER id=haralin}
        experience="$( $this_unit.experience + $xp_gain )"
    [/modify_unit]
    {CLEAR_VARIABLE xp_gain}
[/event]
[event]
    name=attack end
    first_time_only=no
    {FILTER_SECOND( {IS_ALLY} {FILTER_ADJACENT id,ability=haralin,mnemonic} )}

    {VARIABLE xp_gain $unit.level}
    [modify_unit]
        {FILTER id=haralin}
        experience="$( $this_unit.experience + $xp_gain )"
    [/modify_unit]
    {CLEAR_VARIABLE xp_gain}
[/event]
[event]
    name=die
    first_time_only=no
    {FILTER_SECOND( {IS_ALLY} {FILTER_ADJACENT id,ability=haralin,mnemonic} )}

    {VARIABLE xp_gain $unit.level}
    [modify_unit]
        {FILTER id=haralin}
        experience="$( $this_unit.experience + $xp_gain )"
    [/modify_unit]
    {CLEAR_VARIABLE xp_gain}
[/event]
#enddef

#######################################################################################################################################################
#                                                                   GROUP 2 SKILLS
#######################################################################################################################################################
#############################
# FIREBALL2
#############################
#define EVENT_FIREBALL2
    [event]
        name=refresh_haralin_skills
        first_time_only=no
		{CHECK_EQUIPPED_SPELL id=haralin skill_fireball2}
        [if] {VARIABLE_CONDITIONAL equipped_spell_found equals yes} {THEN(
        [object]
            id,take_only_once=skill_fireball2,no {FILTER id=haralin}
            {EFFECT new_attack (
                name,description,icon=fireball,_"fireball",attacks/fireball.png
                range,type,damage,number=ranged,fire,8,4
                [specials]
                    {WEAPON_SPECIAL_MAGICAL}
                [/specials] )}
            [/object]
		)} [/if]
        [/event]
#enddef
#define ANIMATIONS_FIREBALL PATH
    # all fireballs share the same attack animation
    [attack_anim]
        {FILTER_ATTACK name=fireball}
        offset=0
        {MISSILE_FRAME_FIREBALL_XY 11 -20}
        start_time=-575
        {FRAME image={PATH}/haralin.png:50}
        {FRAME image={PATH}/haralin.png:[100,150,75]}
        {FRAME image={PATH}/haralin.png:75}
        {SOUND:HIT_AND_MISS fire.wav fire.wav -375}
    [/attack_anim]
#enddef

#############################
# ENERVATE
#############################
#define EVENT_ENERVATE
    [event]
        name=refresh_haralin_skills
        first_time_only=no
		{CHECK_EQUIPPED_SPELL id=haralin skill_enervate}
        [if] {VARIABLE_CONDITIONAL equipped_spell_found equals yes} {THEN(
        [object]
            id,take_only_once=skill_enervate,no {FILTER id=haralin}
            {EFFECT new_attack (
                name,description,icon=enervate,_"siphon",icons/enervate.png
                range,type,damage,number=ranged,arcane,8,4
                [specials]
                    {WEAPON_SPECIAL_MAGICAL}
                    {WEAPON_SPECIAL_DRAIN}
                [/specials] )}
            [/object]
		)} [/if]
        [/event]
#enddef
#define ANIMATIONS_ENERVATE PATH
    [attack_anim]
        {FILTER_ATTACK name=enervate}
        start_time=-350
        {FRAME sound,image=siphon.ogg,{PATH}/haralin.png:[50,400,50]}
        overlay_start_time=-350
        {OVERLAY_FRAME  offset,halo=1.0,"halo/elven/nature-halo[8~1].png~CS(50,-30,-50)~O([80%*2,60%,40%,30%,20%*3]):75"}
        [if]
            hits=yes
            overlay2_start_time=-200
            {OVERLAY2_FRAME offset,halo=0.0,"halo/elven/nature-halo[1~8].png~CS(50,-30,-50)~O([20%*3,30%,40%,60%,80%*2]):75"}
            missile_start_time=-200
            [missile_frame]
                image="halo/elven/druid-healing[8~1].png~CS(50,-30,-50):50"
                offset=1.0~0.0
            [/missile_frame]
        [/if]
        [else]
            hits=no
            missile_start_time=-200
            [missile_frame]
                image="halo/elven/druid-healing[8~1].png~CS(50,-30,-50):50"
                offset=1.0~0.8
                alpha=1.0~0.0
            [/missile_frame]
        [/else]
    [/attack_anim]
#enddef

#############################
# BLIZZARD
#############################
#define FREEZE_TERRAIN X Y
    # credit to beetlenaut: https://forums.wesnoth.org/viewtopic.php?t=54559
    {VARIABLES_SPLIT terrains before (,) (W*,S*,H*,G*,R*,D*,I*,Ur*,Ke*,Ce*,Co*,Ch*,Cv*,Cf*,Cu*,Ct*,Cm*,Km*,Ko*,Kt*,Kh*,Kv*,Kf*,Ku*,M*,Fp*, Fd*, Fm*, Vl*, Vc*, Vh,  Vhc*, Vhh*, Vo,  Vu,  Ve  )}
    {VARIABLES_SPLIT tmp      after  (,) (Ai,Ai,Ha,Aa,Aa,Aa,Aa,Aa, Kea,Cea,Coa,Cha,Cva,Cfa,Cfa,Coa,Cha,Kha,Koa,Koa,Kha,Kva,Kfa,Kfa,Ms,^Fpa,^Fda,^Fma,^Vla,^Vca,^Vha,^Vhca,^Vhha,^Voa,^Vaa,^Vea)}
    [foreach]
        array=terrains
        [do] {VARIABLE this_item.after $tmp[$i].after}
		[/do]
    [/foreach]
    {CLEAR_VARIABLE tmp}
    [foreach]
        array=terrains
        [do]
            [if] {VARIABLE_CONDITIONAL this_item.after contains "^"} {THEN(
                {VARIABLE layer overlay}
                {VARIABLE before "*^$this_item.before"}
            )} {ELSE(
                {VARIABLE layer base}
                {VARIABLE before "$this_item.before^*"}
            )}
			[/if]
            [if] {HAVE_LOCATION (x,y,terrain={X},{Y},$before)} {THEN(
                [terrain]
                    x,y={X},{Y}
                    terrain=$this_item.after
                    layer=$layer
                [/terrain]
                [break]
                [/break]
            )}
			[/if]
        [/do]
    [/foreach]
    {CLEAR_VARIABLE terrains,before,layer}

    [item]
        x,y,name={X},{Y},snow_overlay
        halo="halo/elven/nature-halo[1~8].png~SCALE(144,144):[75*8]"
    [/item]
    [redraw]
    [/redraw]
    [if] {HAVE_UNIT  (x,y={X},{Y} {NOT({IS_ALLY})} )} {THEN(
        {MODIFY_UNIT (x,y={X},{Y}) status.slowed yes}
        {MODIFY_UNIT (x,y={X},{Y}) status.uncovered yes} # for S03. If someone tries this we might as well let it work.
        {SOUND slowed.wav}
    )}
	[/if]
    {DELAY 1}
#enddef
#define REMOVE_FREEZE_HALO X Y
    [remove_item]
        x,y,image={X},{Y},snow_overlay
    [/remove_item]
    {DELAY 25}
#enddef
#define DO_RANDOMLY_IN_NOTIN FLT NOT_FLT ARBITRARY_WML
    [store_locations]
        {AND( {FLT}     {FILTER id=haralin} )}
        {NOT( {NOT_FLT} {FILTER id=haralin} )}
        variable=locs
    [/store_locations]
    [while]
        {VARIABLE_CONDITIONAL locs.length greater_than 0}
        [do]{VARIABLE_OP z rand "0..$($locs.length-1)"}
            {ARBITRARY_WML}
            {CLEAR_VARIABLE locs[$z]} # use z intead of i,j,k, etc so we don't aren't interefed with by ARBITRARY_WML
        [/do]
    [/while]
    {CLEAR_VARIABLE locs}
#enddef

#define EVENT_BLIZZARD
    [event]
        name=skill_blizzard
        first_time_only=no
        {ANIMATE_UNIT id=haralin skill_blizzard}
        {GIVE_OBJECT_TO id=haralin (id=skill_blizzard_animation) }

        {DO_RANDOMLY_IN_NOTIN radius=0 x,y=99,99 ({FREEZE_TERRAIN $locs[$z].x $locs[$z].y})}
        {DO_RANDOMLY_IN_NOTIN radius=1 radius=0  ({FREEZE_TERRAIN $locs[$z].x $locs[$z].y})}
        {DO_RANDOMLY_IN_NOTIN radius=2 radius=1  ({FREEZE_TERRAIN $locs[$z].x $locs[$z].y})}
        {DO_RANDOMLY_IN_NOTIN radius=3 radius=1  ({FREEZE_TERRAIN $locs[$z].x $locs[$z].y})}

        {REMOVE_OBJECT skill_blizzard_animation id=haralin}
        {ANIMATE_UNIT id=haralin skill_blizzard_end}

        {DO_RANDOMLY_IN_NOTIN radius=0 x,y=99,99 ({REMOVE_FREEZE_HALO $locs[$z].x $locs[$z].y})}
        {DO_RANDOMLY_IN_NOTIN radius=1 radius=0  ({REMOVE_FREEZE_HALO $locs[$z].x $locs[$z].y})}
        {DO_RANDOMLY_IN_NOTIN radius=2 radius=1  ({REMOVE_FREEZE_HALO $locs[$z].x $locs[$z].y})}
        {DO_RANDOMLY_IN_NOTIN radius=3 radius=1  ({REMOVE_FREEZE_HALO $locs[$z].x $locs[$z].y})}
        {FIRE_EVENT skill_blizzard_end} # used in S13
    [/event]
#enddef
#define ANIMATIONS_BLIZZARD PATH
    [animation]
        apply_to=skill_blizzard
        {SOUND_FRAME sound=skill-blizzard.wav}
        {FRAME image={PATH}/haralin-ranged1.png:100}
        {OVERLAY_FRAME halo="halo/blizzard/[0001~0004].png~CS(150,150,150)~SCALE(144,144):25"}
    [/animation]
    [standing_anim]
        {FILTER_OBJECT_ID skill_blizzard_animation}
        {FRAME image={PATH}/haralin-ranged2.png}
        {OVERLAY_FRAME halo="halo/blizzard/[0004~0130].png~CS(150,150,150)~SCALE(144,144):25"}
    [/standing_anim]
    [animation]
        apply_to=skill_blizzard_end
        {FRAME image={PATH}/haralin-ranged1.png:100}
    [/animation]
#enddef

#############################
# COUNTERSPELL
#############################
#define REFRESH_COUNTERSPELL_VISUAL
    [remove_item]
        image=counterspell_aura
    [/remove_item]
    [store_unit]
        {FILTER_OBJECT_ID skill_counterspell}
        variable=counterspeller
    [/store_unit]
    [if] {VARIABLE_CONDITIONAL counterspeller.length greater_than 0} {THEN (
        [item]
            x,y,name=$counterspeller[0].x,$counterspeller[0].y,counterspell_aura
            halo="halo/counterspell/ucircle-b-[07~23,07~23,07~23,07~23,07~23,07~23].png~SCALE(120,70)~O(0.6)"
        [/item]
        [item]
            x,y,name=$counterspeller[0].x,$counterspeller[0].y,counterspell_aura
            halo="halo/counterspell/ucircle-b-[23~07,23~07,23~07,23~07,23~07,23~07].png~SCALE(180,105)~O(0.4)~CS(-25,-25,-25)"
        [/item]
        [item]
            x,y,name=$counterspeller[0].x,$counterspeller[0].y,counterspell_aura
            halo="halo/counterspell/ucircle-b-[07~23,07~23,07~23,07~23,07~23,07~23].png~SCALE(264,154)~O(0.2)~CS(-100,-100,-100)"
        [/item]
        [item]
            x,y,name=$counterspeller[0].x,$counterspeller[0].y,counterspell_aura
            halo="halo/counterspell/counterspell-aoe.png"
        [/item]
    )}
	[/if]
    {CLEAR_VARIABLE counterspeller}
#enddef
#define REFRESH_COUNTERSPELLED
    {REMOVE_OBJECT counterspelled ()}
    [store_unit]
        {FILTER_OBJECT_ID skill_counterspell}
        variable=counterspeller
    [/store_unit]
    [if] {VARIABLE_CONDITIONAL counterspeller.length greater_than 0} {THEN (
        [modify_unit]
            {FILTER( {FILTER_LOCATION radius,x,y=3,$counterspeller[0].x,$counterspeller[0].y} )}
            [object]
                id=counterspelled
                {EFFECT attack (
                    special_id=magical
                    attack_weight,defense_weight=0,0
                    [set_specials]
                        mode=replace
                        [dummy]
                            id,name=counterspelled,_"<span color='#DD6F6F'>counterspelled</span>" # change text color to red
                            description=_"Counterspell is nullifying this magical attack."
                        [/dummy]
                    [/set_specials])}
                [/object]
            [/modify_unit]
        )}
		[/if]
        {CLEAR_VARIABLE illusionist}
#enddef
#define EVENT_COUNTERSPELL
    #------------------------
    # COUNTERSPELL IS CAST
    #------------------------
    # events only support 1 unit with counterspell at a time
    [event]
        name=skill_counterspell
        first_time_only=no
        {FIRE_EVENT skill_illusion_cancel}

        {GIVE_OBJECT_TO id=haralin id=skill_counterspell_casting}
        {DELAY 1200} # wait for casting anim to almost-complete

        {GIVE_OBJECT_TO id=haralin id=skill_counterspell}
        {REFRESH_COUNTERSPELL_VISUAL}
        {REMOVE_OBJECT skill_counterspell_casting ()}
        {REFRESH_COUNTERSPELLED}
        [event]
            name=skill_counterspell_cancel
            {REMOVE_OBJECT skill_counterspell ()}
            {SOUND skill-polymorph.wav}
            {REFRESH_COUNTERSPELL_VISUAL}
            {REFRESH_COUNTERSPELLED}
        [/event]
    [/event]

    #------------------------
    # COUNTERSPELLER MOVES
    #------------------------
    [event]
        name,first_time_only=moveto,no
        {FILTER_OBJECT_ID skill_counterspell}
        {REFRESH_COUNTERSPELL_VISUAL}
        {REFRESH_COUNTERSPELLED}
        [allow_undo]
        [/allow_undo]
        [on_undo]
            {REFRESH_COUNTERSPELL_VISUAL}
            {REFRESH_COUNTERSPELLED}
        [/on_undo]
    [/event]
    [event]
        name,first_time_only=exit hex,no
        {FILTER_OBJECT_ID skill_counterspell}
        [remove_item]
            image=counterspell_aura
        [/remove_item]
        [allow_undo]
        [/allow_undo]
        [on_undo]
            {REFRESH_COUNTERSPELL_VISUAL}
            {REFRESH_COUNTERSPELLED}
        [/on_undo]
    [/event]
    [event]
        name,first_time_only=die,no
        {FILTER_OBJECT_ID skill_counterspell}
        [remove_item]
            image=counterspell_aura
        [/remove_item]
        {REMOVE_OBJECT counterspelled ()}
    [/event]

    #------------------------
    # COUNTERSPEELLEE MOVES
    #------------------------
    [event]
        name=moveto,unit placed,pre attack
        first_time_only=no
        {FILTER_CONDITION({HAVE_UNIT ({FILTER_WML_OBJECT_ID skill_counterspell})} )}
        {REFRESH_COUNTERSPELLED}
        [allow_undo]
        [/allow_undo]
        [on_undo]
            {REFRESH_COUNTERSPELLED}
        [/on_undo]
    [/event]

    #------------------------
    # DISABLE SPELLCASTING
    #------------------------
    # not sure how to detect objects with lua, so just set a variable instead (which spellcasting.lua can read)
    [event]
        name=skill_counterspell
        first_time_only=no
        {VARIABLE counterspell_active yes}
    [/event]
    [event]
        name=skill_counterspell_cancel
        first_time_only=no
        {CLEAR_VARIABLE counterspell_active}
    [/event]

    #------------------------
    # RESELECT SPELLS
    #------------------------
    [event]
        name=refresh_haralin_skills
        first_time_only=no
		{CHECK_EQUIPPED_SPELL id=haralin skill_counterspell}
        [if] {VARIABLE_CONDITIONAL equipped_spell_found not_equals yes} {THEN(
            {FIRE_EVENT skill_counterspell_cancel}
		)} [/if]
    [/event]
    [event]
        name=victory
        first_time_only=no
        {FIRE_EVENT skill_counterspell_cancel}
    [/event]
#enddef
#define ANIMATIONS_COUNTERSPELL PATH
    [standing_anim]
        {FILTER_OBJECT_ID skill_counterspell_casting}
        sound_start_time=-1250   {SOUND_FRAME sound=skill-counterspell.wav}
        start_time=-1250         {FRAME image={PATH}/haralin-ranged[1,2,1].png:[150,950,150]}
        overlay_start_time=-900  {OVERLAY_FRAME (image=halo/counterspell/counterspell-aoe.png:900
        auto_hflip,alpha=no,0~1)}
        overlay2_start_time=-900 {OVERLAY2_FRAME (image="halo/counterspell/ucircle-b-[12~23].png~SCALE(120,70):75"
        auto_hflip,alpha=no,0~0.6)}
        overlay3_start_time=-600 {OVERLAY3_FRAME (image="halo/counterspell/ucircle-b-[14~07].png~SCALE(180,105)~CS(-25,-25,-25):75"
        auto_hflip,alpha=no,0~0.4)}
        overlay4_start_time=-300 {OVERLAY4_FRAME (image="halo/counterspell/ucircle-b-[07~10].png~SCALE(264,154)~CS(-100,-100,-100):75"
        auto_hflip,alpha=no,0~0.2)}
    [/standing_anim]
    [movement_anim]
        {FILTER_OBJECT_ID skill_counterspell}
        {OVERLAY_FRAME (auto_hflip,image=no,halo/counterspell/counterspell-aoe.png
        offset=0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200 )}
        {OVERLAY2_FRAME (auto_hflip,alpha,image=no,0.6,"halo/counterspell/ucircle-b-[12~23].png~SCALE(120,70):75"
        offset=0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200 )}
        {OVERLAY3_FRAME (auto_hflip,alpha,image=no,0.4,"halo/counterspell/ucircle-b-[14~07].png~SCALE(180,105)~CS(-25,-25,-25):75"
        offset=0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200 )}
        {OVERLAY4_FRAME (auto_hflip,alpha,image=no,0.2,"halo/counterspell/ucircle-b-[07~10].png~SCALE(264,154)~CS(-100,-100,-100):75"
        offset=0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200 )}
    [/movement_anim]
#enddef

#############################
# POLYMORPH
#############################
#define EVENT_POLYMORPH_TYPE NAME TYPE PROFILE
    [event]
        name={NAME}
        first_time_only=no
        [if]    {HAVE_UNIT( id,formula=haralin,"(self.moves=0)" {FILTER_ADJACENT(level,is_enemy=1-99,true)} )}
            {OR({HAVE_UNIT( id,formula=haralin,"(self.attacks_left=0)" )})}
            {THEN( {VARIABLE zoc_penalty 99} )}
            {ELSE( {VARIABLE zoc_penalty  0} )}
        [/if]

        {FIRE_EVENT skill_illusion_cancel}
		
		{VARIABLE caster_haralin.polymorphed 'dummy'}

        # remove haralin
        {SOUND skill-polymorph.wav}
        {ANIMATE_UNIT id=haralin levelout}

        [if] {HAVE_UNIT id,status=haralin,slowed  } {THEN({VARIABLE delf_slowed   yes})} 
		[/if]
        [if] {HAVE_UNIT id,status=haralin,poisoned} {THEN({VARIABLE delf_poisoned yes})} 
		[/if]
        [store_unit]
            {FILTER id=haralin}
            variable,kill=p,yes
        [/store_unit]
        [redraw]
        [/redraw]

        # determine portrait
        {VARIABLE profile_suffix "~BLIT(portraits/younger_haralin.webp~O(0.6))"}
        [if] {VARIABLE_CONDITIONAL p.level greater_than 2} {THEN(
            {VARIABLE profile_suffix "~BLIT(portraits/young_haralin.webp~FL()~O(0.6))"}
        )}
		[/if]

        # create animal
        [unit]
            side=1
            type={TYPE}
            id,name=haralin,_"haralin"
            canrecruit=yes
            profile="{PROFILE}$profile_suffix"
            [filter_recall]
                level=9999 # not allowed to recruit or recall, but still a leader (in case filters check for that)
            [/filter_recall]
            x,y,facing=$p.x,$p.y,$p.facing
            attacks_left=$p.attacks_left
            hitpoints=$p.hitpoints
            experience=$p.experience
            {MODIFICATIONS( [object]
            {EFFECT max_experience set=$p.max_experience}
            {EFFECT level set=$p.level} # so the spellcasting dialog doesn't break
        [/object] )}
    [/unit]
    [if] {VARIABLE_CONDITIONAL delf_slowed   equals yes} {THEN({MODIFY_UNIT id=haralin status.slowed   yes})}
	[/if]
    [if] {VARIABLE_CONDITIONAL delf_poisoned equals yes} {THEN({MODIFY_UNIT id=haralin status.poisoned yes})}
	[/if]
    {CLEAR_VARIABLE delf_slowed,delf_poisoned}

    [modify_unit]
        {FILTER id=haralin}
        moves=$( $this_unit.max_moves - ($p.max_moves-$p.moves) - $zoc_penalty)
    [/modify_unit]
    {CLEAR_VARIABLE zoc_penalty}

    # use haralin's literal HP instead of proportional HP scaling, so that polymorphed forms scale as haralin levels up and gains hitpoints
    {VARIABLE max_hp_change $p.max_hitpoints}
    {STORE_UNIT_VAR id=haralin max_hitpoints animal_hp}
    {VARIABLE_OP max_hp_change sub $animal_hp} # I can't figure out how to do this math in [object], and [modify_unit] gets overwritten each combat
    {GIVE_OBJECT_TO id=haralin (id={NAME} {EFFECT hitpoints increase_total=$max_hp_change})} # id={NAME} tells lua this ability is cancellable
    {CLEAR_VARIABLE max_hp_change,animal_hp}

    [redraw]
        clear_shroud=yes
    [/redraw]
    {ANIMATE_UNIT id=haralin levelin}

    #------------------------
    # BALANCE CHANGES
    #------------------------
    # polymorph is supposed to be about multiple situational forms.
    # Stoat is worse than levitate, Bear is worse than a village, Crab is worse than the shield spell (and ok, Roc is just really really fast)
    # but you get them all at once with Polymorph

    # Stoat (mobility)
    # a cheap, budget mobility option. 6mp, skirmisher, and good movement in snow/ice.
    # Its dodge is unimpressive because of poor resistances, though it might be useful defensively if you're purely fighting saurian augurs or ghosts or something
    [object]
        {FILTER id,type=haralin,"Frost Stoat"}
        {EFFECT movement_costs (replace=yes
        [movement_costs]
            frozen,sand,forest,hill,mountain=1,1,1,2,2
        [/movement_costs])}
    [/object]

    # Bear (recovery)
    # a great way to regain HP, and the % of HP even scales as you level up. Bear also gets 70% defense and full movement in mountains, and deals decent damage at night.
    [object]
        {FILTER id,type=haralin,"Cave Bear"}
        {EFFECT attack ( #name=fangs
        [set_specials]
            mode=append
            [dummy]
                id,name=consume,_"consume"
                description=_"This unit regains <span color='#00FF00'>30%</span> of its maximum hitpoints whenever it kills a living unit."
            [/dummy]
        [/set_specials])}
    [/object]

    # Crab (tank)
    # a defensive option, with great resistances and decent damage but terrible movement.
    # I find it best used as a replacement for the Shield spell, particularly when you can poison many attackers.

    # Roc (mobility/damage)
    # an outstanding mobility option, and has decent damage as well. I find it best used as a superior Levitate spell.

    [redraw] # refresh fog
    [/redraw]

    #------------------------
    # UN-POLYMORPH
    #------------------------
    [event]
        name={NAME}_cancel,victory # side 1 turn refresh (lasts until cancelled)
        {SOUND skill-polymorph.wav}
        {ANIMATE_UNIT id=haralin levelout}

        [if] {HAVE_UNIT id,status=haralin,slowed  } {THEN({VARIABLE delf_slowed   yes})}
		[/if]
        [if] {HAVE_UNIT id,status=haralin,poisoned} {THEN({VARIABLE delf_poisoned yes})}
		[/if]
        [store_unit]
            {FILTER id=haralin}
            variable,kill=p2,yes
        [/store_unit]
        [redraw]
        [/redraw]
		
		{CLEAR_VARIABLE caster_haralin.polymorphed}

        [unstore_unit]
            variable=p
            find_vacant=yes # otherwise we overwrite any unit at haralin's old position
        [/unstore_unit]
        [modify_unit]
            {FILTER id=haralin}
            x,y,facing=$p2.x,$p2.y,$p2.facing
            hitpoints,experience,attacks_left=$p2.hitpoints,$p2.experience,$p2.attacks_left
            moves=$( $this_unit.max_moves - ($p2.max_moves-$p2.moves) )
        [/modify_unit]
        [if] {VARIABLE_CONDITIONAL delf_slowed   equals yes} {THEN({MODIFY_UNIT id=haralin status.slowed   yes})}
		[/if]
        [if] {VARIABLE_CONDITIONAL delf_poisoned equals yes} {THEN({MODIFY_UNIT id=haralin status.poisoned yes})}
		[/if]
        {CLEAR_VARIABLE delf_slowed,delf_poisoned}

        {ANIMATE_UNIT id=haralin levelin}
        [redraw]
        [/redraw]
        {CLEAR_VARIABLE p,p2}

        [if] {HAVE_UNIT (id,defense=haralin,100)} {THEN(
            [message]
                speaker=haralin
                message=_"My polymorph spell has ended over impassable terrain! I‘m falling to my death!"
            [/message]
            {KILL id=haralin ANIMATE=yes}
            [endlevel]
                result=defeat
            [/endlevel]
        )}
		[/if]
    [/event]
[/event]
#------------------------
# EXPLAIN POLYMORPH
#------------------------
[event]
    name=die
    {FILTER_SECOND id=haralin}
    {FILTER_CONDITION({VARIABLE_CONDITIONAL p.length not_equals 0})}
    {FILTER_CONDITION({VARIABLE_CONDITIONAL polymorph_was_explained not_equals yes})}
    {FILTER_CONDITION( {HAVE_UNIT id,level=haralin,0-3} )} # this would sound weird if triggered too late in the campaign
    [message]
        speaker=haralin
        #po: haralin has just killed a unit while shapeshifted into an animal with his Polymorph spell
        message= _ "And so old Methor proves himself right once again - transmutation magic is <b>not</b> useless! <span size='x-small'>Though I still say fireballs are still a lot more photogenic.</span>" # anachronism; hopefully not a big deal. Or who knows, maybe there's some kind of magical photography at Alduin.
    [/message]
    {VARIABLE polymorph_was_explained yes} # only say this voiceline once per campaign
[/event]
#enddef
#define EVENT_POLYMORPH
    {EVENT_POLYMORPH_TYPE skill_polymorph_lizard  (Swamp Lizard) "portraits/monsters/crocodile.webp"}
    {EVENT_POLYMORPH_TYPE skill_polymorph_bear   (Cave Bear  ) "portraits/monsters/bear.webp"}
    {EVENT_POLYMORPH_TYPE skill_polymorph_yeti   (Yeti ) "portraits/monsters/yeti.webp"}
    {EVENT_POLYMORPH_TYPE skill_polymorph_orc    (Orcish Warlord ) "portraits/orcs/orcish-warlord.webp"}
    [event] # implement the cave bear's "consume" ability
        name=last breath # not die, because plot units are often {KILL}ed during their last breath
        first_time_only=no
        {FILTER( {NOT trait=undead,elemental} )}
        {FILTER_SECOND_ATTACK special_id=consume}

        {STORE_UNIT_VAR id=$second_unit.id max_hitpoints consume_heal_amount}
        {VARIABLE_OP consume_heal_amount multiply 0.3}
        [heal_unit]
            {FILTER id=$second_unit.id}
            amount,animate=$consume_heal_amount,yes
            restore_statuses=no
        [/heal_unit]
        {CLEAR_VARIABLE consume_heal_amount}
    [/event]
    [event]
        name=refresh_haralin_skills
        first_time_only=no
        {FILTER_CONDITION({VARIABLE_CONDITIONAL p.length not_equals 0})}
		{CHECK_EQUIPPED_SPELL id=haralin skill_polymorph}
        [if] {VARIABLE_CONDITIONAL equipped_spell_found not_equals yes} {THEN(
            {FIRE_EVENT skill_polymorph_lizard_cancel}
            {FIRE_EVENT skill_polymorph_bear_cancel}
            {FIRE_EVENT skill_polymorph_yeti_cancel}
            {FIRE_EVENT skill_polymorph_orc_cancel}
		)} [/if]
    [/event]
    [event]
        name=victory
        first_time_only=no
        {FIRE_EVENT skill_polymorph_lizard_cancel}
        {FIRE_EVENT skill_polymorph_bear_cancel}
        {FIRE_EVENT skill_polymorph_yeti_cancel}
        {FIRE_EVENT skill_polymorph_orc_cancel}
    [/event]
#enddef
#define ANIMATIONS_POLYMORPH PATH
    [animation]
        apply_to=skill_polymorph
        start_time=-100
        {FRAME image={PATH}/haralin-ranged[1~2].png:50}
    [/animation]
#enddef

#############################
# GLAMOUR
#############################
#define EVENT_GLAMOUR
    [event]
        name=refresh_haralin_skills
        first_time_only=no
		{CHECK_EQUIPPED_SPELL id=haralin skill_glamour}
        [if] {VARIABLE_CONDITIONAL equipped_spell_found equals yes} {THEN(
        [object]
            id,take_only_once=skill_glamour,no {FILTER id=haralin}
            {EFFECT new_ability ([abilities]
            {ABILITY_LEADERSHIP}
        [/abilities]  )}
    [/object]
	)} [/if]
[/event]
#enddef

#######################################################################################################################################################
#                                                                   GROUP 3 SKILLS
#######################################################################################################################################################
#############################
# FIREBALL3
#############################
#define EVENT_FIREBALL3
    [event]
        name=refresh_haralin_skills
        first_time_only=no
		{CHECK_EQUIPPED_SPELL id=haralin skill_fireball3}
        [if] {VARIABLE_CONDITIONAL equipped_spell_found equals yes} {THEN(
        [object]
            id,take_only_once=skill_fireball3,no {FILTER id=haralin}
            {EFFECT new_attack (
                name,description,icon=fireball,_"fireball",attacks/fireball.png
                range,type,damage,number=ranged,fire,12,4
                [specials]
                    {WEAPON_SPECIAL_MAGICAL}
                [/specials] )}
            [/object]
		)} [/if]
        [/event]
#enddef

#############################
# DANCING DAGGERS
#############################
#define EVENT_DANCING_DAGGERS
    [event]
        name=refresh_haralin_skills
        first_time_only=no
		{CHECK_EQUIPPED_SPELL id=haralin skill_dancing_daggers}
        [if] {VARIABLE_CONDITIONAL equipped_spell_found equals yes} {THEN(
        [object]
            id,take_only_once=skill_dancing_daggers,no {FILTER id=haralin}
            {EFFECT new_attack (
                name,description,icon="dancing daggers",_"dancing daggers",icons/dancing-daggers.png
                range,type,damage,number=ranged,blade,5,8
                [specials]
                    {WEAPON_SPECIAL_BACKSTAB}
                [/specials] )}
            [/object]
		)} [/if]
        [/event]
#enddef
#define ONEANIM_DANCING_DAGGERS A B C D
    [attack_anim]
        {FILTER_ATTACK name="dancing daggers"}
        start_time=-350         {FRAME image={PATH}/haralin-leading.png:350}
        overlay_start_time=-350 {OVERLAY_FRAME x,y,image=0,-30,"halo/elven/faerie-fire-halo[1~7].png~SCALE(48,48):75"}
        missile_start_time=-300
        missile2_start_time=-250
        missile3_start_time=-200
        [missile_frame]
            duration,offset,x,y=150,0~0.8,{A}2~{B}2,-15~7
            image="projectiles/dagger-n.png"
            image_diagonal="projectiles/dagger-ne.png"
        [/missile_frame]
        [missile2_frame]
            duration,offset,x,y=150,0~0.8,{C}2~{D}2,-25~-7
            image="projectiles/dagger-n.png"
            image_diagonal="projectiles/dagger-ne.png"
        [/missile2_frame]
        [missile3_frame]
            duration,offset,x,y=150,0~0.8,0~0,-20~0
            image="projectiles/dagger-n.png"
            image_diagonal="projectiles/dagger-ne.png"
        [/missile3_frame]
        {SOUND:HIT_AND_MISS throwing-knife.ogg throwing-knife-miss.ogg -200}
    [/attack_anim]
#enddef
#define ANIMATIONS_DANCING_DAGGERS PATH
    {ONEANIM_DANCING_DAGGERS -  -  () ()}
    {ONEANIM_DANCING_DAGGERS () () -  - }
    {ONEANIM_DANCING_DAGGERS -  () ()  -}
    {ONEANIM_DANCING_DAGGERS () -  -  ()}
#enddef

#############################
# ILLUSION
#############################
#define REFRESH_ILLUSION_VISUAL
    [remove_item]
        image=illusion_aura
    [/remove_item]
    [store_unit]
        {FILTER_OBJECT_ID skill_illusion}
        variable=illusionist
    [/store_unit]
    [if] {VARIABLE_CONDITIONAL illusionist.length greater_than 0} {THEN(
        [item]
            x,y,name=$illusionist[0].x,$illusionist[0].y,illusion_aura
            halo="halo/terror/terrorCW-[21~45].png~O(0.07)~CS(252,174,30):100, halo/terror/terrorCW-[1~20].png~O(0.07)~CS(252,174,30):100"
        [/item]
        [item]
            x,y,name=$illusionist[0].x,$illusionist[0].y,illusion_aura
            halo="halo/terror/terrorCCW-[1~45].png~O(0.07)~CS(225,225,0)~FL():175"
        [/item]
        [item]
            x,y,name=$illusionist[0].x,$illusionist[0].y,illusion_aura
            halo="halo/terror/terrorCCW-[1~45].png~O(0.07)~CS(252,215,0):100"
        [/item]
        {VARIABLE flip ""}
        [if]{VARIABLE_CONDITIONAL illusionist.facing contains "w"}{THEN(  {VARIABLE flip "~FL()"}  )}[/if]
        [item] # don't use a standing anim, because then I'd need to also create a attack/defense/everything animations
            x,y,name=$illusionist[0].x,$illusionist[0].y,illusion_aura
            halo="units/drakes/armageddon.png$flip~O([0.7,0.7,0.7,0.69,0.68,0.67,0.66,0.65,0.64,0.63,0.62,0.61,0.6,0.59,0.58,0.57,0.56,0.55,0.54,0.53,0.52,0.51,0.5,0.49,0.48,0.47,0.46,0.45,0.44,0.43,0.42,0.41,0.4,0.39,0.38,0.37,0.36,0.35,0.34,0.33,0.32,0.31,0.3,0.29,0.28,0.27,0.26,0.25,0.24,0.23,0.22,0.21,0.2,0.2,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.3,0.31,0.32,0.33,0.34,0.35,0.36,0.37,0.38,0.39,0.4,0.41,0.42,0.43,0.44,0.45,0.46,0.47,0.48,0.49,0.5,0.51,0.52,0.53,0.54,0.55,0.56,0.57,0.58,0.59,0.6,0.61,0.62,0.63,0.64,0.65,0.66,0.67,0.68,0.69]):75"
        [/item]
        {CLEAR_VARIABLE flip}
    )}
	[/if]
    {CLEAR_VARIABLE illusionist}
#enddef
#define REFRESH_ENTHRALLED
    {REMOVE_OBJECT enthralled ()}
    [store_unit]
        {FILTER_OBJECT_ID skill_illusion}
        variable=illusionist
    [/store_unit]
    [if] {VARIABLE_CONDITIONAL illusionist.length greater_than 0} {THEN (
        [modify_unit]
            {FILTER( {NOT({IS_ALLY})} {FILTER_LOCATION radius,x,y=2,$illusionist[0].x,$illusionist[0].y} )}
            [object]
                id=enthralled
                {EFFECT attack ([set_specials]
                mode=append
                [chance_to_hit]
                    sub=10
                [/chance_to_hit]
            [/set_specials])}
            {EFFECT defense ([defense]
            flat,sand,frozen,forest,hills,mountains=10,10,10,10,10,10
            swamp_water,reef,shallow_water,deep_water=10,10,10,10
            cave,fungus,castle,village,unwalkable=10,10,10,10,10
        [/defense])}
    [/object]
[/modify_unit]
)} 
[/if]
{CLEAR_VARIABLE illusionist}
#enddef
#define EVENT_ILLUSION
    #------------------------
    # ILLUSION IS CAST
    #------------------------
    # events only support 1 unit with illusion at a time
    [event]
        name=skill_illusion
        first_time_only=no
        {ANIMATE_UNIT id=haralin skill_illusion}
        {GIVE_OBJECT_TO id=haralin (id=skill_illusion {EFFECT profile portrait="portraits/drakes/inferno.webp~BLIT(portraits/young_haralin.webp~FL()~O(0.6))"})}

        {REFRESH_ILLUSION_VISUAL}
        {REFRESH_ENTHRALLED}
        [event]
            name=skill_illusion_cancel
            {REMOVE_OBJECT skill_illusion ()}
            {SOUND skill-polymorph.wav}
            {REFRESH_ILLUSION_VISUAL}
            {REFRESH_ENTHRALLED}
        [/event]
    [/event]

    #------------------------
    # ILLUSIONIST MOVES
    #------------------------
    [event]
        name,first_time_only=moveto,no
        {FILTER_OBJECT_ID skill_illusion}
        {REFRESH_ILLUSION_VISUAL}
        {REFRESH_ENTHRALLED}
        [allow_undo]
        [/allow_undo]
        [on_undo]
            delayed_variable_substitution=yes # for some reason I need to turn this on, or accessing the stored illusionist variable with $ fails (even though it works fine with {VARIABLE_CONDITIONAL})
            {REFRESH_ILLUSION_VISUAL}
            {REFRESH_ENTHRALLED}
        [/on_undo]
    [/event]
    [event]
        name,first_time_only=exit hex,no
        {FILTER_OBJECT_ID skill_illusion}
        [remove_item]
            image=illusion_aura
        [/remove_item]
        [allow_undo]
        [/allow_undo]
        [on_undo]
            delayed_variable_substitution=yes
            {REFRESH_ILLUSION_VISUAL}
            {REFRESH_ENTHRALLED}
        [/on_undo]
    [/event]

    #------------------------
    # ENTHRALEE MOVES
    #------------------------
    [event]
        name=moveto,unit placed
        first_time_only=no
        {FILTER_CONDITION({HAVE_UNIT ({FILTER_WML_OBJECT_ID skill_illusion})} )}
        {REFRESH_ENTHRALLED}
        [allow_undo]
        [/allow_undo]
        [on_undo]
            {REFRESH_ENTHRALLED}
        [/on_undo]
    [/event]

    #------------------------
    # FLAVOR MESSAGE
    #------------------------
    [event]
        name=attack
        {FILTER_OBJECT_ID skill_illusion}
        {FILTER_CONDITION({VARIABLE_CONDITIONAL attack.name equals fireball})}
        {FILTER_CONDITION({VARIABLE_CONDITIONAL finished_drakefire_taunt not_equals yes})}
        [message]
            speaker=unit
            #po: haralin is magically disguised as a drake, and has just case a fireball
            message=_"Taste drakefire!"
        [/message]
        {VARIABLE finished_drakefire_taunt yes}
    [/event]

    #------------------------
    # RESELECT SPELLS
    #------------------------
    [event]
        name=refresh_haralin_skills
        first_time_only=no
		{CHECK_EQUIPPED_SPELL id=haralin skill_illusion}
        [if] {VARIABLE_CONDITIONAL equipped_spell_found not_equals yes} {THEN(
            {FIRE_EVENT skill_illusion_cancel}
		)} [/if]
    [/event]
    [event]
        name=victory
        first_time_only=no
        {FIRE_EVENT skill_illusion_cancel}
    [/event]
#enddef
#define ANIMATIONS_ILLUSION PATH
    [animation]
        apply_to=skill_illusion
        sound_start_time   =-600 {SOUND_FRAME    sound=skill-illusion.wav}
        overlay_start_time =-400 {OVERLAY_FRAME  alpha,image=0.05~0.80,"units/drakes/armageddon.png~MASK(masks/teleport-mask-[9~0].png):100"}

        overlay2_start_time=-600 {OVERLAY2_FRAME (halo_x,halo_y,halo= 10,-30~30,halo/teleport-[9,8,1~9].png:75)}
        overlay3_start_time=-400 {OVERLAY3_FRAME (halo_x,halo_y,halo=  0,-40~40,halo/teleport-[9,8,1~9].png:75)}
        overlay4_start_time=-200 {OVERLAY4_FRAME (halo_x,halo_y,halo=-10,-30~30,halo/teleport-[9,8,1~9].png:75)}

        overlay5_start_time=-400 {OVERLAY5_FRAME auto_hflip,alpha,image=no,0~1,"halo/terror/terrorCW-[ 11~20].png~O(0.10)~CS(252,174,30):100"}
        overlay6_start_time=-400 {OVERLAY6_FRAME auto_hflip,alpha,image=no,0~1,"halo/terror/terrorCCW-[40~45].png~O(0.10)~CS(225,225,0)~FL():175"}
        overlay7_start_time=-400 {OVERLAY7_FRAME auto_hflip,alpha,image=no,0~1,"halo/terror/terrorCCW-[36~45].png~O(0.10)~CS(252,215,0):10"}
    [/animation]
    [movement_anim]
        base_score=99 # if we have multiple active spells with movement animations, prefer illusion's since it's the most obvious
        {FILTER_OBJECT_ID skill_illusion}
        {OVERLAY_FRAME (image="units/drakes/armageddon.png~O(0.4):200"
        offset=0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200,0~1:200 )}
    [/movement_anim]
#enddef

#############################
# CONTINGENCY
#############################
#define EVENT_CONTINGENCY
    [event]
        name=last breath,trigger_contingency
        first_time_only=no
        {FILTER( side=1 {NOT(id=haralin)} {NOT(type_adv_tree=Mudcrawler,Fire Guardian)} )}
        {FILTER_CONDITION( {CONTINGENCY_GLOBAL_CONDITIONS} )}

        {FIRE_EVENT explain_contingency}
        {REMOVE_OBJECT skill_panacea_buff id=$unit.id}
        [modify_unit]
            {FILTER id=$unit.id}
            [object]
                duration=turn
                {EFFECT new_animation ([animation]
                apply_to=skill_contingency
                sound_start_time   =-900 {SOUND_FRAME sound=skill-contingency.wav}
                start_time         =-900 {FRAME duration=450}
                {FRAME duration,image=450,misc/blank-hex.png}
                overlay_start_time =-900 {OVERLAY_FRAME  (duration,image=900,halo/contingencyA.png
                alpha=0~1:290,1:320,1~0:290)}
                overlay2_start_time=-610 {OVERLAY2_FRAME (duration,image=900,halo/contingencyB.png
                alpha=0~1:150,1:20,1~0:150)}
            [/animation])}
        [/object]
    [/modify_unit]
    {ANIMATE_UNIT id=$unit.id skill_contingency}
    [floating_text]
        x,y,text=$unit.x,$unit.y,_"<span color='#ffffff' size='x-small'>Contingency</span>"
    [/floating_text]
    {PUT_TO_RECALL_LIST id=$unit.id}
    [modify_unit]
        {FILTER id=$unit.id}
        hitpoints=1 # your unit is alive, but badly injured. It'll still get Wesnoth's default scenario-end heal
        #            hitpoints="$( $this_unit.max_hitpoints )" # for some reason {FULL_HEAL} doesn't work here
    [/modify_unit]
    [fire_event]
        name=saved_by_contingency
        [primary_unit]
            id=$unit.id
        [/primary_unit]
    [/fire_event]
[/event]
#enddef
#define ANIMATIONS_CONTINGENCY PATH
#enddef

#######################################################################################################################################################
#                                                                   GROUP 4 SKILLS
#######################################################################################################################################################
#############################
# FIREBALL4
#############################
#define EVENT_FIREBALL4
    [event]
        name=refresh_haralin_skills
        first_time_only=no
		{CHECK_EQUIPPED_SPELL id=haralin skill_fireball4}
        [if] {VARIABLE_CONDITIONAL equipped_spell_found equals yes} {THEN(
        [object]
            id,take_only_once=skill_fireball4,no {FILTER id=haralin}
            {EFFECT new_attack (
                name,description,icon=fireball,_"fireball",attacks/fireball.png
                range,type,damage,number=ranged,fire,17,4
                [specials]
                    {WEAPON_SPECIAL_MAGICAL}
                [/specials] )}
            [/object]
		)} [/if]
        [/event]
#enddef

#############################
# LIGHTNING
#############################
#define EVENT_LIGHTNING
    [event]
        name=refresh_haralin_skills
        first_time_only=no
		{CHECK_EQUIPPED_SPELL id=haralin skill_lightning}
        [if] {VARIABLE_CONDITIONAL equipped_spell_found equals yes} {THEN(
        [object]
            id,take_only_once=skill_lightning,no {FILTER id=haralin}
            {EFFECT new_attack (
                name,description,icon=lightning,_"lightning",attacks/lightning.png
                range,type,damage,number=ranged,fire,14,4
                [specials]
                    {WEAPON_SPECIAL_MAGICAL}
                    [dummy]
                        id,name,description=chain,_"chain","If this attack kills an enemy, you may attack again."
                    [/dummy]
                [/specials] )}
            [/object]
		)} [/if]
        [/event]
        [event]
            name=last breath
            first_time_only=no
            {FILTER_SECOND_ATTACK special_id=chain}
            {MODIFY_UNIT id=$second_unit.id attacks_left 1}
        [/event]
#enddef
#define ANIMATIONS_LIGHTNING_SINGLEBOLT DIRECTION_NUMBER PATH
    [attack_anim]
        {FILTER_ATTACK name=lightning}
        {LIGHTNING_BOLT {DIRECTION_NUMBER} }
        start_time=-300
        {FRAME image={PATH}/haralin.png:50}
        {FRAME image={PATH}/haralin-ranged[1,2,1].png:[125,225,75]}
        {FRAME image={PATH}/haralin.png:75}
        {SOUND:HIT_AND_MISS lightning.ogg lightning-miss.ogg -300}
    [/attack_anim]
#enddef
#define ANIMATIONS_LIGHTNING PATH
    {ANIMATIONS_LIGHTNING_SINGLEBOLT 1 {PATH}}
    {ANIMATIONS_LIGHTNING_SINGLEBOLT 2 {PATH}}
    {ANIMATIONS_LIGHTNING_SINGLEBOLT 3 {PATH}}
#enddef

#############################
# TIME DILATION
#############################
#define TIME_DILATION_START
[0072,0071,0070,0069,0068,0067,0066,0065,0064,0063,0062,0061,0060,0059,0058,0057,0056,0055,0054,0053,0052,0051,0050,0049,0048,0047,0046,0045,0044,0043].png~O([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1])~SCALE(48,48)~CS(-150,150,-150)~FL() #enddef
    # 0072 starts out transparent, so we don't need to fade it

#define TIME_DILATION_END
    [0023,0024,0025,0026,0027,0028,0029,0030,0031,0032,0033,0034,0035,0036,0037,0038,0039,0040,0041,0042,0043,0044,0045,0046,0047,0048,0049,0050,0051,0052,0053,0054,0055,0056,0057,0058,0059,0060,0061,0062,0063,0064,0065,0066,0067,0068,0069,0070,0071,0072].png~O([0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])~SCALE(48,48)~CS(100,-255,-255) #enddef
        # longer than TIME_DILATION_START, to sync up with the sound

#define EVENT_TIME_DILATION
    [event]
        name=skill_time_dilation
        first_time_only=no
        [store_unit]
            {FILTER( {IS_ALLY} )}
            variable=time_dilation_units
        [/store_unit]

        # animate haralin
        {GIVE_OBJECT_TO id=haralin (id=skill_time_dilation_casting) }
        {DELAY 2100} # wait for casting anim to be partway done

        # animate allies
        [foreach]
            array=time_dilation_units
            [do]{GIVE_OBJECT_TO (id=$this_item.id {NOT(id=haralin)}) (id=skill_time_dilation_start  {EFFECT halo halo="halo/time-dilation/{TIME_DILATION_START}:50"}) }
			[/do]
        [/foreach]
        {DELAY 1500} # wait for the start-anim AND casting-anim to finish animating
        {REMOVE_OBJECT skill_time_dilation_casting ()}
        {REMOVE_OBJECT skill_time_dilation_start   ()}

        # apply buff
        [foreach]
            array=time_dilation_units # for some reason I couldn't get these working with WFL, e.g. [modify_unit] moves=$( $this_unit.moves + $this_unit.max_moves )
            [do] {VARIABLE moves $this_item.moves       }  {VARIABLE_OP moves add $this_item.max_moves}  {MODIFY_UNIT id=$this_item.id moves       $moves }  {CLEAR_VARIABLE moves}
                {VARIABLE atks  $this_item.attacks_left}  {VARIABLE_OP atks  add 1                   }  {MODIFY_UNIT id=$this_item.id attacks_left $atks }  {CLEAR_VARIABLE atks }
                [modify_unit]
                    {FILTER id=$this_item.id}
                    [object]
                        id=skill_time_dilation_buff
                        {EFFECT movement increase=100%} # means this also affects other-side allies when they refresh their turn
                        {EFFECT max_attacks increase=1}
                        {EFFECT halo (
                            {FILTER( {NOT(type=Mage of Light)} )} # MoL already has a halo
                            halo="halo/time-dilation/[0001,0002,0003,0004,0005,0006,0007,0008,0009,0010,0011,0012,0013,0014,0015,0016,0017,0018,0019,0020,0021,0022,0023,0024,0025,0026,0027,0028,0029,0030,0031,0032,0033,0034,0035,0036,0037,0038,0039,0040,0041,0042,0043,0044,0045,0046,0047,0048,0049,0050,0051,0052,0053,0054,0055,0056,0057,0058,0059,0060,0061,0062,0063,0064,0065,0066,0067,0068,0069,0070,0071,0072].png~SCALE(48,48)~O(0.5)"
                        )}
                    [/object]
                [/modify_unit]
            [/do]
        [/foreach]

        #--------------------
        # SLOW ALL DIALATED UNITS
        #--------------------
        [event]
            name=side turn # not "side turn end", because slow gets cleared when your turn ends
            {REMOVE_OBJECT skill_time_dilation_buff ()}
            {SOUND skill-time-dilation-end.wav}
            [foreach]
                array=time_dilation_units
                [do]{GIVE_OBJECT_TO id=$this_item.id (id=skill_time_dilation_end  {EFFECT halo halo="halo/time-dilation/{TIME_DILATION_END}:50"}) }
				[/do]
            [/foreach]

            {DELAY 2500} # wait for the shorthalo to finish animating
            {REMOVE_OBJECT skill_time_dilation_end ()} # do this before status.slowed=yes. For some reason, removing this object afterwards clears the slow on AMLA-ed units (probably something weird with the level-up heal)
            [foreach]
                array=time_dilation_units
                [do]{MODIFY_UNIT id=$this_item.id status.slowed yes}
				[/do]
            [/foreach]
            {CLEAR_VARIABLE time_dilation_units}
        [/event]
    [/event]
    [event]
        name=refresh_haralin_skills
        first_time_only=no
		{CHECK_EQUIPPED_SPELL id=haralin skill_time_dilation}
        [if] {VARIABLE_CONDITIONAL equipped_spell_found not_equals yes} {THEN(
            {REMOVE_OBJECT skill_time_dilation_buff ()}
		)} [/if]
    [/event]
#enddef
#define ANIMATIONS_TIME_DILATION PATH
    [standing_anim]
        {FILTER_OBJECT_ID skill_time_dilation_casting}
        sound_start_time   =-3600 {SOUND_FRAME     sound=skill-time-dilation.wav}
        start_time         =-3600 {FRAME           image={PATH}/haralin-ranged[1,2,1].png:[100,3600,100]}
        overlay_start_time =-3600 {OVERLAY_FRAME  (x,y,image=   0,   0, "halo/time-dilation/[0001~0072].png:50")}
        overlay2_start_time=-3250 {OVERLAY2_FRAME (x,y,image=-150,  75, "halo/time-dilation/[0001~0072].png~SCALE(108,108)~O(0.7):45")}
        overlay3_start_time=-2900 {OVERLAY3_FRAME (x,y,image= 110,  80, "halo/time-dilation/[0001~0072].png~SCALE(144,144)~O(0.7):40")}
        overlay4_start_time=-2500 {OVERLAY4_FRAME (x,y,image= -40,-130, "halo/time-dilation/[0001~0072].png~SCALE(124,124)~O(0.7):35")}
    [/standing_anim]
#enddef

        #############################
        # CATACLYSM
        #############################
#define CATACLYSM_TERRAIN X Y
    # flatten castle/village/keep/forest
    [if] {HAVE_LOCATION (
        x,y={X},{Y}
        terrain=C*^*,K*^*,*^V*,*^F*
    )} {THEN(
        [if] {HAVE_LOCATION (
            x,y={X},{Y}
            terrain=C*^*,K*^*,*^V* # no rubble after destroying a forest
        )} {THEN(
            {VARIABLE_OP rubble rand castle-ruins.png,castle-ruins2.png,castle-ruins3.png,slab1.png,rubble.png,trash.png}
            {PLACE_IMAGE scenery/$rubble {X} {Y}}
        )} [/if]

        [terrain]
            x,y={X},{Y}
            layer,terrain=overlay,"^"
        [/terrain]
        [terrain]
            x,y={X},{Y} {AND terrain=C*,K*}
            terrain=Rrd
        [/terrain]
        [item]
            name=cataclysm_burning
            x,y,halo={X},{Y},scenery/flames[01~15].png
        [/item]
    )} [/if]

    # convert flat into ugly flat
    [if] {HAVE_LOCATION (
        x,y={X},{Y}
        terrain=G*^*,R*^*,A*^*,I*^*,Ur*^*
    )} {THEN(
        {VARIABLE_OP newflat rand Rd,Re,Rb,Ur}
        [terrain]
            x,y={X},{Y} {AND( {NOT terrain=Rrd} )}
            layer,terrain=base,$newflat
        [/terrain]
    )} [/if]

    # convert hills into dry hills
    [if] {HAVE_LOCATION (
        x,y={X},{Y}
        terrain=H*^*
    )} {THEN(
        [terrain]
            x,y={X},{Y}
            layer,terrain=base,Hhd
        [/terrain]
    )} [/if]
    {CLEAR_VARIABLE rubble,newflat}
#enddef
#define CATACLYSM_DAMAGE MULTIPLIERS X Y
    {VARIABLE_OP multiplier rand {MULTIPLIERS}}
    [harm_unit]
        {FILTER( x,y={X},{Y} {NOT id=haralin} {NOT type="King Eldred","Hunker Eldred"} )}
        kill,amount=no,$($this_unit.hitpoints * $multiplier)
    [/harm_unit]
    [harm_unit]
        {FILTER( x,y={X},{Y} {NOT id=haralin} {AND type="King Eldred"} )} # hardcode cataclysm's damage specifically vs super eldred. No RNG (which also means no varying with range, but that's ok)
        kill,amount=no,$($this_unit.hitpoints * 0.7)
    [/harm_unit]
    [harm_unit]
        {FILTER( x,y={X},{Y} {NOT id=haralin} {AND type="Hunker Eldred"} )}
        kill,amount=no,1
    [/harm_unit]
    [if] {HAVE_UNIT (x,y,type={X},{Y},King Eldred)} {THEN( {FIRE_EVENT cataclysm_harmed_eldred} )} [/if] # used in S13
    {CLEAR_VARIABLE multiplier}
    #     {DELAY 5} # stagger the damage text slightly, so it looks prettier
#enddef
#define EVENT_CATACLYSM
    [event]
        name=skill_cataclysm
        first_time_only=no
        # casting animation
        {GIVE_OBJECT_TO id=haralin id=skill_cataclysm_casting}
        {DELAY 1400} {SCREEN_FADER 255,255,255 255 400}
        {REMOVE_OBJECT skill_cataclysm_casting ()}

        # affect all hexes in the AOE, in a random order
        {DO_RANDOMLY_IN_NOTIN radius=4 x,y=99,99 ({CATACLYSM_TERRAIN $locs[$z].x $locs[$z].y}) }

        {STORE_UNIT_VAR id=haralin x delfX} {STORE_UNIT_VAR id=haralin y delfY}
        {PLACE_IMAGE scenery/crater.png $x $y} {CLEAR_VARIABLE delfX,delfY}

        {DO_RANDOMLY_IN_NOTIN radius=0 x,y=99,99 ({CATACLYSM_DAMAGE 0.9         $locs[$z].x $locs[$z].y}) }
        {DO_RANDOMLY_IN_NOTIN radius=1 radius=0  ({CATACLYSM_DAMAGE 0.9,0.8,0.7 $locs[$z].x $locs[$z].y}) }
        {DO_RANDOMLY_IN_NOTIN radius=2 radius=1  ({CATACLYSM_DAMAGE 0.8,0.7,0.6 $locs[$z].x $locs[$z].y}) }
        {DO_RANDOMLY_IN_NOTIN radius=3 radius=2  ({CATACLYSM_DAMAGE 0.7,0.6,0.5 $locs[$z].x $locs[$z].y}) }
        {DO_RANDOMLY_IN_NOTIN radius=4 radius=3  ({CATACLYSM_DAMAGE 0.6,0.5,0.4 $locs[$z].x $locs[$z].y}) }

        {DELAY 100} # this helps us get a consistent skill animation
        [redraw]
        [/redraw]
        {SCREEN_FADER 255,255,255 0 0}
        {DELAY 50} # tiny delay before the animation makes it catch the eye a little better
        {SOUND skill-cataclysm-end.wav}
        {GIVE_OBJECT_TO id=haralin (id=skill_cataclysm_casted) }
        {QUAKE ()}  {QUAKE ()}  {QUAKE ()}  {QUAKE ()}  {QUAKE ()}

        # remove casted and fires
        {DO_RANDOMLY_IN_NOTIN radius=4 x,y=99,99 (
            {DELAY 50} # 37 hexes; 50ms delay adds up to 1850ms dela
            [remove_item]
                x,y,image=$locs[$z].x,$locs[$z].y,cataclysm_burning
            [/remove_item] )}
            {REMOVE_OBJECT skill_cataclysm_casted ()}
            [redraw]
            [/redraw] # otherwise the sphere sometimes persists
            {FIRE_EVENT explain_cataclysm}
        [/event]
        [event]
            name=explain_cataclysm
            {FILTER_CONDITION({VARIABLE_CONDITIONAL cataclysm_was_explained not_equals yes})}
            {STORE_UNIT_VAR     ( {NOT side=1} {FILTER_LOCATION( radius=4 {FILTER(id=haralin)} )} race,canrecruit=human,yes {NOT(type=Crown Prince,King Eldred,Hunker Eldred)} ) id speaker_id} # find an affected unit, preferring a leader
            [if] {VARIABLE_CONDITIONAL speaker_id equals $null} {THEN(
                {STORE_UNIT_VAR ( {NOT side=1} {FILTER_LOCATION( radius=4 {FILTER(id=haralin)} )} race,canrecruit=human,no  {NOT(type=Crown Prince,King Eldred,Hunker Eldred)} ) id speaker_id}
            )}
			[/if]

            [if] {VARIABLE_CONDITIONAL speaker_id not_equals $null} {THEN(
                [message]
                    speaker=$speaker_id
                    # po: haralin has just cast his cataclysm spell, dealing heavy damage in a large radius and destroying trees/villages/castles
                    message=_"Dear lords of light, what was that?!"
                [/message]
                {VARIABLE cataclysm_was_explained yes} # only say this voiceline once per campaign
            )}
			[/if]
        [/event]
#enddef
#define ANIMATIONS_CATACLYSM PATH
    [standing_anim]
        {FILTER_OBJECT_ID skill_cataclysm_casting}
        sound_start_time   =-1400 {SOUND_FRAME    sound=skill-cataclysm.wav}
        start_time         =-1800 {FRAME          image={PATH}/haralin-ranged[1,2].png:[100,1900]}
        overlay_start_time =-1800 {OVERLAY_FRAME  alpha,image=0~1.0,"halo/cataclysm/[0001~0024].png:75"}
        overlay2_start_time= -600 {OVERLAY2_FRAME alpha,image=0~1.0,"halo/cataclysm/cataclysm00-[1~6,1~6].png~CS(-100,-255,-255):50"}
    [/standing_anim]
    [standing_anim]
        {FILTER_OBJECT_ID skill_cataclysm_casted}
        {OVERLAY_FRAME  y,alpha,image=72,0.6~0.0,"halo/cataclysm/sphere/[0001~0024,0001~0024].png~SCALE(800,800)~CS(-100,-100,-100):50"}
        {OVERLAY_FRAME  image=misc/blank-hex.png:99999}

        {OVERLAY2_FRAME yalpha,image=-10,5~0,"halo/cataclysm/explosion/[1~9].png~SCALE(500,500)~CS(-100,-255,-255):100"}
        {OVERLAY2_FRAME image=misc/blank-hex.png:99999}
    [/standing_anim]
#enddef

        #######################################################################################################################################################
        #                                                                  "PUBLIC" MACROS
        #######################################################################################################################################################
#define EVENT_REMOVE_SKILLS
    [event]
        name=refresh_haralin_skills
        first_time_only=no
        {REMOVE_OBJECT skill_magic_blast   id=haralin}
        {REMOVE_OBJECT skill_shield          id=haralin}
        {REMOVE_OBJECT skill_stasis          id=haralin}
        {REMOVE_OBJECT skill_mnemonic        id=haralin}

        {REMOVE_OBJECT skill_chill_touch     id=haralin}
        {REMOVE_OBJECT skill_levitate        id=haralin}
        {REMOVE_OBJECT skill_panacea         id=haralin}

        {REMOVE_OBJECT skill_fireball2       id=haralin}
        {REMOVE_OBJECT skill_enervate        id=haralin}
        {REMOVE_OBJECT skill_blizzard        id=haralin}
        {REMOVE_OBJECT skill_counterspell    id=haralin}
        {REMOVE_OBJECT skill_polymorph       id=haralin}
        {REMOVE_OBJECT skill_glamour         id=haralin}

        {REMOVE_OBJECT skill_fireball3       id=haralin}
        {REMOVE_OBJECT skill_dancing_daggers id=haralin}
        {REMOVE_OBJECT skill_illusion        id=haralin}
        {REMOVE_OBJECT skill_contingency     id=haralin}

        {REMOVE_OBJECT skill_fireball4       id=haralin}
        {REMOVE_OBJECT skill_lightning       id=haralin}
        {REMOVE_OBJECT skill_cataclysm       id=haralin}
        {REMOVE_OBJECT skill_time_dilation   id=haralin}
    [/event]
#enddef

        #############################
        # GLOBAL EVENTS
        #############################
#define GLOBAL__SPELLCASTING_EVENTS_HARALIN
    {EVENT_REMOVE_SKILLS} # create this event first, so we remove and THEN re-add

    {EVENT_CHILL_TOUCH}
    {EVENT_MAGIC_BLAST}
    {EVENT_SUMMON_MUD}
    {EVENT_SUMMON_ROCK}
    {EVENT_SUMMON_WATER}
    {EVENT_SUMMON_AIR}
    {EVENT_SUMMON_FIRE}
    {EVENT_SHIELD}
    {EVENT_STASIS}
    {EVENT_FIND_FAMILIAR}
    {EVENT_MNEMONIC}

    {EVENT_LEVITATE}
    {EVENT_PANACEA}
	{EVENT_BEND_NATURE_EARTH}
	{EVENT_BEND_NATURE_LAVA}
	{EVENT_BEND_NATURE_WATER}
	{EVENT_BEND_NATURE_AIR}
	{EVENT_BEND_NATURE_REVERT_POST}

    {EVENT_FIREBALL2}
    {EVENT_ENERVATE}
    {EVENT_BLIZZARD}
    {EVENT_COUNTERSPELL}
    {EVENT_POLYMORPH}
    {EVENT_GLAMOUR}

    {EVENT_FIREBALL3}
    {EVENT_DANCING_DAGGERS}
    {EVENT_ILLUSION}
    {EVENT_CONTINGENCY}

    {EVENT_FIREBALL4}
    {EVENT_LIGHTNING}
    {EVENT_CATACLYSM}
    {EVENT_TIME_DILATION}
#enddef

        #############################
        # ANIMATIONS
        #############################
#define SPELLCASTING_ANIMATIONS_HARALIN PATH
    {ANIMATIONS_MAGIC_BLAST {PATH}}
    {ANIMATIONS_SHIELD {PATH}}
    {ANIMATIONS_STASIS {PATH}}

    {ANIMATIONS_CHILL_TOUCH {PATH}}
    {ANIMATIONS_LEVITATE {PATH}}
    {ANIMATIONS_PANACEA {PATH}}
	
	{ANIMATIONS_BEND_LAVA {PATH}}

    {ANIMATIONS_FIREBALL {PATH}} # all fireballs share the same attack animation
    {ANIMATIONS_ENERVATE {PATH}}
    {ANIMATIONS_BLIZZARD {PATH}}
    {ANIMATIONS_COUNTERSPELL {PATH}}
    {ANIMATIONS_POLYMORPH {PATH}}

    {ANIMATIONS_DANCING_DAGGERS {PATH}}
    {ANIMATIONS_ILLUSION {PATH}}
    {ANIMATIONS_CONTINGENCY {PATH}}

    {ANIMATIONS_LIGHTNING {PATH}}
    {ANIMATIONS_CATACLYSM {PATH}}
    {ANIMATIONS_TIME_DILATION {PATH}}

    #--------------------
    # DEFAULT ANIMATIONS
    #--------------------

    [leading_anim]
        start_time=-250          {FRAME image={PATH}/haralin.png:500}
        overlay_start_time=-100  {OVERLAY_FRAME halo_x,halo_y,halo=14,-25,halo/misc/leadership-flare-[1~13].png:20}
    [/leading_anim]
    [recruiting_anim]
        start_time=-250          {FRAME image={PATH}/haralin.png:500}
        overlay_start_time=-100  {OVERLAY_FRAME halo_x,halo_y,halo=14,-25,halo/misc/leadership-flare-[1~13].png:20}
    [/recruiting_anim]

    [standing_anim]
        base_score=-1 # avoid using this animation if any others apply
        {FRAME image={PATH}/haralin.png}
    [/standing_anim]
    [movement_anim]
        base_score=-1 # avoid using this animation if any others apply
        {FRAME image={PATH}/haralin.png}
    [/movement_anim]
#enddef
