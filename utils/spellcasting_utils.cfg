#textdomain wesnoth-ctl

#############################
# RESELECT SKILLS
#############################
#define RESELECT_SKILLS CASTER
    [select_caster_skills]
	    [filter]
	        {CASTER}
	    [/filter]
    [/select_caster_skills]
#enddef

#define RESELECT_SKILLS_AFTER_OBJECTIVES CASTER WML_BEFORE WML_AFTER
    # doing things after showing objectives is hard. This approximates it.
    [listen_for_mousemove]
    [/listen_for_mousemove]
    [event]
        name=mousemove_synced
        [do_command]
            [fire_event]
                raise=mousemove # convert to a synced context
            [/fire_event]
        [/do_command]
    [/event]
    [event]
        name=select
        [do_command]
            [fire_event]
                raise=mousemove # convert to a synced context
            [/fire_event]
        [/do_command]
    [/event]
    [event]
        name=mousemove,recruit,recall,side 1 turn end
        {WML_BEFORE}
        [select_caster_skills]
	        [filter]
	            {CASTER}
	        [/filter]
        [/select_caster_skills]
        {WML_AFTER}
    [/event]
#enddef

#############################
# UNLOCK SPELL
#############################
#define UNLOCK_SPELL CASTER SPELL_ID
    [unlock_spell]
	    [filter]
	        {CASTER}
	    [/filter]
	    spell_id={SPELL_ID}
    [/unlock_spell]
#enddef

#############################
# LOCK SPELL
#############################
#define LOCK_SPELL CASTER SPELL_ID
    [lock_spell]
	    [filter]
	        {CASTER}
	    [/filter]
	    spell_id={SPELL_ID}
    [/lock_spell]
#enddef

#############################
# CASTER STATUS
#############################
#define CASTER_STATUS CASTER ACTIVE
    [caster_status]
	    [filter]
	        {CASTER}
	    [/filter]
	    #yes/true or no/false
	    spellcasting_allowed = {ACTIVE}
	[/caster_status]
#enddef

#############################
# EQUIP SPELL
#############################
#define EQUIP_SPELL CASTER SPELL_ID
    [equip_spell]
		[filter]
		    {CASTER}
		[/filter]
		spell_id= {SPELL_ID}
	[/equip_spell]
#enddef

#############################
# UNEQUIP SPELL
#############################
#define UNEQUIP_SPELL CASTER SPELL_ID
    [unequip_spell]
		[filter]
		    {CASTER}
		[/filter]
		spell_id= {SPELL_ID}
	[/unequip_spell]
#enddef

#############################
# CHECK EQUIPPED SPELL
#############################
#define CHECK_EQUIPPED_SPELL CASTER SPELL_ID
    [find_equipped_spell]
        [filter]
            {CASTER}
        [/filter]
        spell_id = {SPELL_ID}
    [/find_equipped_spell]
#enddef

#############################
# REMOVE CASTER
#############################
#define REMOVE_CASTER CASTER
    [remove_caster]
	    [filter]
	        {CASTER}
        [/filter]
    [/remove_caster]
#enddef





#define MAGIC_SYSTEM__GLOBAL_EVENTS	
    #--------------------
    # PREVENT LEVELING
    #--------------------
    [event]
        name=pre advance
        first_time_only=no
		[lua]
        code= <<
			local advancing_unit = wesnoth.units.find_on_map({x = wml.variables["unit.x"], y = wml.variables["unit.y"]})[1]
			local _ = wesnoth.textdomain "wesnoth-ctl"
	
			if  wml.variables["caster_" .. advancing_unit.id] then
			    advancing_unit.experience = advancing_unit.max_experience - 1
			    if not wml.variables["caster_" .. advancing_unit.id .. ".disable_xp_message"] then
			        wml.fire("floating_text", ({x = advancing_unit.x, y = advancing_unit.y, text=(_"<span color='#a308b8' size='small'>Max XP!</span>")}))
				end
				wml.variables["caster_" .. advancing_unit.id .. ".disable_xp_message"] = true
			end
			
			advancing_unit = nil
	    >>
	    [/lua]
    [/event]

    #--------------------
    # PREVENT BADLY-TIMED SPELLS
    #--------------------
    [event]
        name=attack, victory, defeat, exit hex
        first_time_only=no
        {VARIABLE is_badly_timed yes}
		[allow_undo][/allow_undo]
    [/event]
    [event]
        name=prestart, attack end, moveto
        first_time_only=no
        {CLEAR_VARIABLE is_badly_timed}
		[allow_undo][/allow_undo]
    [/event]
    #--------------------
    # NEW TURN RESET
    #--------------------
    [event]
        name=start,turn refresh,victory
        first_time_only=no
		[lua]
        code= <<
            local units = wesnoth.units.find_on_map()
            
            for i,u in ipairs(units) do
                if  wml.variables["caster_" .. u.id] then
                    if u.side == wml.variables["side_number"] then
                        wml.variables["caster_" .. u.id .. ".spellcasted_this_turn"] = nil
                        wml.variables["caster_" .. u.id .. ".disable_xp_message"] = nil
                    end
                end
            end
			
            units = nil
			
			wml.fire("caster_set_menu")
	    >>
	    [/lua]
    [/event]
#enddef